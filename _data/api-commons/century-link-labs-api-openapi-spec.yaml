- swagger: "2.0"
  info:
    title: Century Cloud API
    description: The CenturyLink Cloud has a new, improved API for performing the same
      actions programmatically as you can with the Control Portal. The API is RESTful
      and works with JSON messages over HTTP. It relies on the standard HTTP verbs including
      GET, POST, PUT, DELETE, and PATCH.
    termsOfService: https://www.ctl.io/legal
    version: v1
  host: api.ctl.io
  basePath: /
  schemes:
  - http
  produces:
  - application/json
  consumes:
  - application/json
  paths:
    /accounts/{accountAlias}/customFields:
      get:
        summary: Get Custom Fields
        description: Retrieves the custom fields defined for a given account. Calls
          to this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-custom-fields
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: Unique identifier of the custom field.
          type: string
        - in: query
          name: isRequired
          description: Boolean value representing whether or not a value is required
            for this custom field.
          type: boolean
        - in: query
          name: name
          description: Friendly name of the custom field as it appears in the UI.
          type: string
        - in: query
          name: options
          description: Array of name-value pairs corresponding to the options defined
            for this field. (Empty for text or checkbox field types.)
          type: array
        - in: query
          name: type
          description: The type of custom field defined. Will be either text (free-form
            text field), checkbox (boolean value), or option (dropdown list).
          type: string
        responses:
          200:
            description: OK
        tags:
        - Accounts
        security: []
    /alertPolicies/{accountAlias}:
      get:
        summary: Get Alert Policies
        description: Gets a list of alert policies within a given account. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-alert-policies
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: action
          description: The only action currently supported by alerts is `email`.
          type: string
        - in: query
          name: actions
          description: The actions to perform when the alert is triggered.
          type: array
        - in: query
          name: duration
          description: 'The length of time in minutes that the condition must exceed
            the threshold: `00:05:00`, `00:10:00`, `00:15:00`.'
          type: string
        - in: query
          name: id
          description: ID of the alert policy.
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy.
          type: array
        - in: query
          name: metric
          description: 'The metric on which to measure the condition that will trigger
            the alert: `cpu`, `memory`, or `disk`.'
          type: string
        - in: query
          name: name
          description: Name of the alert policy.
          type: string
        - in: query
          name: settings
          description: The only setting currently supported is the `recipients` list,
            which is an array of email addresses to be notified when the alert is triggered.
          type: complex
        - in: query
          name: threshold
          description: The threshold that will trigger the alert when the metric equals
            or exceeds it. This number represents a percentage and must be a value between
            5.0 - 95.0 that is a multiple of 5.0.
          type: number
        - in: query
          name: triggers
          description: The definition of the triggers that fire the alert.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Alert Policies
        security: []
      post:
        summary: Create Alert Policy
        description: Creates an alert policy in a given account. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: create-alert-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: action
          description: The only action currently supported by alerts is `email`.
          type: string
        - in: query
          name: actions
          description: The actions to perform when the alert is triggered.
          type: array
        - in: query
          name: duration
          description: 'The length of time in minutes that the condition must exceed
            the threshold: `00:05:00`, `00:10:00`, `00:15:00`.'
          type: string
        - in: query
          name: metric
          description: 'The metric on which to measure the condition that will trigger
            the alert: `cpu`, `memory`, or `disk`.'
          type: string
        - in: query
          name: name
          description: Name of the alert policy.
          type: string
        - in: query
          name: settings
          description: The only setting currently supported is the `recipients` list,
            which is an array of email addresses to be notified when the alert is triggered.
          type: complex
        - in: query
          name: threshold
          description: The threshold that will trigger the alert when the metric equals
            or exceeds it. This number represents a percentage and must be a value between
            5.0 - 95.0 that is a multiple of 5.0.
          type: number
        - in: query
          name: triggers
          description: The definition of the triggers that fire the alert.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Alert Policies
        security: []
    /alertPolicies/{accountAlias}/{policyId}:
      delete:
        summary: Delete Alert Policy
        description: Deletes a given alert policy by ID. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: delete-alert-policy
        responses:
          200:
            description: OK
        tags:
        - Alert Policies
        security: []
      get:
        summary: Get Alert Policy
        description: Gets a given alert policy by ID. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-alert-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: action
          description: The only action currently supported by alerts is `email`.
          type: string
        - in: query
          name: actions
          description: The actions to perform when the alert is triggered.
          type: array
        - in: query
          name: duration
          description: 'The length of time in minutes that the condition must exceed
            the threshold: `00:05:00`, `00:10:00`, `00:15:00`.'
          type: string
        - in: query
          name: id
          description: ID of the alert policy.
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy.
          type: array
        - in: query
          name: metric
          description: 'The metric on which to measure the condition that will trigger
            the alert: `cpu`, `memory`, or `disk`.'
          type: string
        - in: query
          name: name
          description: Name of the alert policy.
          type: string
        - in: query
          name: PolicyId
          description: ID of the alert policy being queried.
          type: string
        - in: query
          name: settings
          description: The only setting currently supported is the `recipients` list,
            which is an array of email addresses to be notified when the alert is triggered.
          type: complex
        - in: query
          name: threshold
          description: The threshold that will trigger the alert when the metric equals
            or exceeds it. This number represents a percentage and must be a value between
            5.0 - 95.0 that is a multiple of 5.0.
          type: number
        - in: query
          name: triggers
          description: The definition of the triggers that fire the alert.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Alert Policies
        security: []
      put:
        summary: Update Alert Policy
        description: Updates the name of an alert policy in a given account. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: update-alert-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: action
          description: The only action currently supported by alerts is `email`.
          type: string
        - in: query
          name: actions
          description: The actions to perform when the alert is triggered.
          type: array
        - in: query
          name: duration
          description: 'The length of time in minutes that the condition must exceed
            the threshold: `00:05:00`, `00:10:00`, `00:15:00`.'
          type: string
        - in: query
          name: metric
          description: 'The metric on which to measure the condition that will trigger
            the alert: `cpu`, `memory`, or `disk`.'
          type: string
        - in: query
          name: name
          description: Name of the alert policy.
          type: string
        - in: query
          name: PolicyId
          description: ID of the alert policy being updated.
          type: string
        - in: query
          name: settings
          description: The only setting currently supported is the `recipients` list,
            which is an array of email addresses to be notified when the alert is triggered.
          type: complex
        - in: query
          name: threshold
          description: The threshold that will trigger the alert when the metric equals
            or exceeds it. This number represents a percentage and must be a value between
            5.0 - 95.0 that is a multiple of 5.0.
          type: number
        - in: query
          name: triggers
          description: The definition of the triggers that fire the alert.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Alert Policies
        security: []
    /antiAffinityPolicies/{accountAlias}:
      get:
        summary: Get Anti-Affinity Policies
        description: Gets a list of anti-affinity policies within a given account. Calls
          to this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-antiaffinity-policies
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: ID of the anti-affinity policy.
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy.
          type: array
        - in: query
          name: location
          description: Data center location of the anti-affinity policy.
          type: string
        - in: query
          name: name
          description: Name of the anti-affinity policy.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Anti-Affinity Policies
        security: []
      post:
        summary: Create Anti-Affinity Policy
        description: Creates an anti-affinity policy in a given account. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: create-antiaffinity-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: location
          description: Data center location of the anti-affinity policy.
          type: string
        - in: query
          name: name
          description: Name of the anti-affinity policy.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Anti-Affinity Policies
        security: []
    /antiAffinityPolicies/{accountAlias}/{policyId}:
      delete:
        summary: Delete Anti-Affinity Policy
        description: Deletes a given anti-affinity policy by ID. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: delete-antiaffinity-policy
        responses:
          200:
            description: OK
        tags:
        - Anti-Affinity Policies
        security: []
      get:
        summary: Get Anti-Affinity Policy
        description: Gets a given anti-affinity policy by ID. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-antiaffinity-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: ID of the anti-affinity policy.
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy.
          type: array
        - in: query
          name: location
          description: Data center location of the anti-affinity policy.
          type: string
        - in: query
          name: name
          description: Name of the anti-affinity policy.
          type: string
        - in: query
          name: PolicyId
          description: ID of the anti-affinity policy being queried.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Anti-Affinity Policies
        security: []
      put:
        summary: Update Anti-Affinity Policy
        description: Updates the name of an anti-affinity policy in a given account.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: update-antiaffinity-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: name
          description: Name of the anti-affinity policy.
          type: string
        - in: query
          name: PolicyId
          description: ID of the anti-affinity policy being updated.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Anti-Affinity Policies
        security: []
    /authentication/loginnn##:
      post:
        summary: Login
        description: Acquires an authentication token used for subsequent queries to
          the API.
        operationId: login
        parameters:
        - in: query
          name: password
          description: Control Portal password value.
          type: string
        - in: query
          name: username
          description: Control Portal user name value
          type: string
        responses:
          200:
            description: OK
        tags:
        - Login
        security: []
    /autoscalePolicies/{accountAlias}:
      get:
        summary: Get Vertical Autoscale Policies
        description: Gets a list of vertical autoscale policies for a given account.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-vertical-autoscale-policies
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: end
          description: End time of window in UTC
          type: string
        - in: query
          name: id
          description: ID of the vertical autoscale policy
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy
          type: array
        - in: query
          name: max
          description: Minimum number of CPU
          type: integer
        - in: query
          name: min
          description: Maximum number of CPU
          type: integer
        - in: query
          name: name
          description: Name of the vertical autoscale policy
          type: string
        - in: query
          name: range
          description: The range defining the minimum and maximum number of CPU to allow
            (between 1-16)
          type: complex
        - in: query
          name: resourceType
          description: The resource type to autoscale; only `cpu` is supported at this
            time
          type: string
        - in: query
          name: scaleDownThreshold
          description: Will scale down when resource it at this setting for at least
            the threshold period (between 1-100)
          type: integer
        - in: query
          name: scaleDownWindow
          description: A server reboot is required for all resource scale downs; this
            is the scale down window during which the resource will be set to the policys
            minimum value.
          type: complex
        - in: query
          name: scaleUpIncrement
          description: Number of CPU to increase on a scale up event (1, 2, or 4)
          type: integer
        - in: query
          name: scaleUpThreshold
          description: Will scale up when resource it at this setting for at least the
            threshold period (between 1-100)
          type: integer
        - in: query
          name: start
          description: Start time of window in UTC
          type: string
        - in: query
          name: thresholdPeriodMinutes
          description: Duration the resource must be at min/max in order to autoscale
            (5, 10, 15, or 30 minutes)
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Autoscale Policies
        security: []
    /autoscalePolicies/{accountAlias}/{policyId}:
      get:
        summary: Get Vertical Autoscale Policy
        description: Gets a given vertical autoscale policy by ID. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-vertical-autoscale-policy
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: end
          description: End time of window in UTC
          type: string
        - in: query
          name: id
          description: ID of the vertical autoscale policy
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy
          type: array
        - in: query
          name: max
          description: Minimum number of CPU
          type: integer
        - in: query
          name: min
          description: Maximum number of CPU
          type: integer
        - in: query
          name: name
          description: Name of the vertical autoscale policy
          type: string
        - in: query
          name: policyId
          description: ID of the autoscale policy being queried
          type: string
        - in: query
          name: range
          description: The range defining the minimum and maximum number of CPU to allow
            (between 1-16)
          type: complex
        - in: query
          name: resourceType
          description: The resource type to autoscale; only `cpu` is supported at this
            time
          type: string
        - in: query
          name: scaleDownThreshold
          description: Will scale down when resource it at this setting for at least
            the threshold period (between 1-100)
          type: integer
        - in: query
          name: scaleDownWindow
          description: A server reboot is required for all resource scale downs. This
            is the scale down window during which the resource will be set to the policys
            minimum value.
          type: complex
        - in: query
          name: scaleUpIncrement
          description: Number of CPU to increase on a scale up event (1, 2, or 4)
          type: integer
        - in: query
          name: scaleUpThreshold
          description: Will scale up when resource it at this setting for at least the
            threshold period (between 1-100)
          type: integer
        - in: query
          name: start
          description: Start time of window in UTC
          type: string
        - in: query
          name: thresholdPeriodMinutes
          description: Duration the resource must be at min/max in order to autoscale
            (5, 10, 15, or 30 minutes)
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Autoscale Policies
        security: []
    /clc-backup-api/api/accountPolicies:
      get:
        summary: Get Policies
        description: Gets a list of backup policies associated with an account. Calls
          to this operation must include a bearer token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-policies
        parameters:
        - in: query
          name: ascendingSort
          description: Sort the sortBy field in ascending order
          type: boolean
        - in: query
          name: backupIntervalHours
          description: The backup frequency of the Policy
          type: integer
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: excludedDirectoryPaths
          description: A list of the directories that the Policy excludes from backup
          type: array[string]
        - in: query
          name: limit
          description: Return up to this many results
          type: integer
        - in: query
          name: name
          description: The name of the Policy
          type: string
        - in: query
          name: nextOffset
          description: The next position in the list of results for a subsequent call
          type: integer
        - in: query
          name: offset
          description: Return results starting from this position in the list
          type: string
        - in: query
          name: osType
          description: Linux or Windows
          type: string
        - in: query
          name: paths
          description: A list of the directories that the Policy includes in each backup
          type: array[string]
        - in: query
          name: policyId
          description: The unique Id associated with the Policy
          type: string
        - in: query
          name: results
          description: An array of the Policies associated with the Account
          type: array[account policy]
        - in: query
          name: retentionDays
          description: The number of days backup data will be retained
          type: integer
        - in: query
          name: sortBy
          description: Sort the results by the specified field
          type: string
        - in: query
          name: status
          description: The status of the backup Policy.  Either ACTIVE or INACTIVE.
          type: string
        - in: query
          name: totalCount
          description: The total number of Policies associated with the Account
          type: integer
        - in: query
          name: withStatus
          description: Filter results for either ACTIVE or INACTIVE Policies
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
      post:
        summary: Create Policy
        description: Creates a new backup policy associated with the account. Calls
          to this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: create-policy
        parameters:
        - in: query
          name: backupIntervalHours
          description: The backup frequency of the Policy specified in hours
          type: integer
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: excludedDirectoryPaths
          description: A list of the directories that the Policy excludes from backup
          type: array[string]
        - in: query
          name: name
          description: The name of the Policy
          type: string
        - in: query
          name: osType
          description: Linux or Windows
          type: string
        - in: query
          name: paths
          description: A list of the directories that the Policy includes in each backup
          type: array[string]
        - in: query
          name: retentionDays
          description: The number of days backup data will be retained
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/accountPolicies/servers/{serverId}:
      get:
        summary: Get All Policies Eligible For ServerId
        description: Returns a list of the backup policies that are eligible to be applied
          to the specified server. Calls to this operation must include a token acquired
          from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-all-policies-eligible-for-serverid
        parameters:
        - in: query
          name: ascendingSort
          description: Sort the sortBy field in ascending order
          type: boolean
        - in: query
          name: backupIntervalHours
          description: The backup frequency of the Policy
          type: integer
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: excludedDirectoryPaths
          description: A list of the directories that the Policy excludes from backup
          type: array[string]
        - in: query
          name: limit
          description: Return up to this many results
          type: integer
        - in: query
          name: name
          description: The name of the Policy
          type: string
        - in: query
          name: nextOffset
          description: The next position in the list of results for a subsequent call
          type: integer
        - in: query
          name: offset
          description: Return results starting from this position in the list
          type: string
        - in: query
          name: osType
          description: Linux or Windows
          type: string
        - in: query
          name: paths
          description: A list of the directories that the Policy includes in each backup
          type: array[string]
        - in: query
          name: policyId
          description: The unique Id associated with the Policy
          type: string
        - in: query
          name: results
          description: An array of the Policies eligible for the specified server
          type: array[account policy]
        - in: query
          name: retentionDays
          description: The number of days backup data will be retained
          type: integer
        - in: query
          name: serverId
          description: Unique server name
          type: string
        - in: query
          name: sortBy
          description: Sort the results by the specified field
          type: string
        - in: query
          name: status
          description: The status of the backup Policy.  Either ACTIVE or INACTIVE.
          type: string
        - in: query
          name: totalCount
          description: The total number of Policies eligible for the specified server
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/accountPolicies/{accountPolicyId}:
      get:
        summary: Get Policy
        description: Gets the backup policy associated with the specified accountPolicyId.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-policy
        parameters:
        - in: query
          name: accountPolicyId
          description: The unique id associated with the backup policy to retrieve
          type: string
        - in: query
          name: backupIntervalHours
          description: The backup frequency of the Policy
          type: integer
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: excludedDirectoryPaths
          description: A list of the directories that the Policy excludes from backup
          type: array[string]
        - in: query
          name: name
          description: The name of the Policy
          type: string
        - in: query
          name: osType
          description: Linux or Windows
          type: string
        - in: query
          name: paths
          description: A list of the directories that the Policy includes in each backup
          type: array[string]
        - in: query
          name: policyId
          description: The unique Id associated with the Policy
          type: string
        - in: query
          name: retentionDays
          description: The number of days backup data will be retained
          type: integer
        - in: query
          name: status
          description: The status of the backup Policy.  Either ACTIVE or INACTIVE.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
      put:
        summary: Update Policy
        description: Updates a backup policy. Calls to this operation must include a
          token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: update-policy
        parameters:
        - in: query
          name: accountPolicyId
          description: The unique id associated with the backup policy to update
          type: string
        - in: query
          name: backupIntervalHours
          description: The backup frequency of the Policy specified in hours
          type: integer
        - in: query
          name: excludedDirectoryPaths
          description: A list of the directories that the Policy excludes from backup
          type: array[string]
        - in: query
          name: name
          description: The name of the Policy
          type: string
        - in: query
          name: osType
          description: Linux or Windows
          type: string
        - in: query
          name: paths
          description: A list of the directories that the Policy includes in each backup
          type: array[string]
        - in: query
          name: policyId
          description: The unique Id associated with the Policy
          type: string
        - in: query
          name: retentionDays
          description: The number of days backup data will be retained
          type: integer
        - in: query
          name: status
          description: ACTIVE or INACTIVE
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/accountPolicies/{accountPolicyId}/serverPolicies:
      get:
        summary: Get Server Policies
        description: Gets a list of Server Policies associated to an Account Policy.
          A server policy is unique record that ties a backup (account) policy to a
          specific server and storage region. Calls to this operation must include a
          token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-server-policies
        parameters:
        - in: query
          name: accountPolicyId
          description: Unique Id of the Account Policy
          type: string
        - in: query
          name: ascendingSort
          description: Sort the sortBy field in ascending order
          type: boolean
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: expirationDate
          description: Date all data retention will elapse; unsubscribedDate+retentionDays
          type: integer
        - in: query
          name: limit
          description: Return up to this many results
          type: integer
        - in: query
          name: nextOffset
          description: The next position in the list of results for a subsequent call
          type: integer
        - in: query
          name: offset
          description: Return results starting from this position in the list
          type: string
        - in: query
          name: results
          description: An array of the Server Policies associated with the Account Policy
          type: array[server policy]
        - in: query
          name: serverId
          description: Unique server name
          type: string
        - in: query
          name: serverPolicyId
          description: The next position in the list of results for a subsequent call
          type: string
        - in: query
          name: sortBy
          description: Sort the results by the specified field
          type: string
        - in: query
          name: status
          description: The status of the backup Policy. ACTIVE, INACTIVE, PROVISIONING,
            ERROR, DELETED
          type: string
        - in: query
          name: storageAccountId
          description: Not currently used
          type: string
        - in: query
          name: storageRegion
          description: Region where backups are stored
          type: string
        - in: query
          name: totalCount
          description: The total number of Server Policies associated with the Account
            Policy
          type: integer
        - in: query
          name: unsubscribedDate
          description: Date policy was inactivated
          type: integer
        - in: query
          name: withStatus
          description: Filter results for either ACTIVE or INACTIVE Policies
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
      post:
        summary: Create Server Policy
        description: Create a Server Policy under an Account Policy. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: create-server-policy
        parameters:
        - in: query
          name: accountPolicyId
          description: The unique Id of an account policy
          type: string
        - in: query
          name: Bulk-Operation
          description: Must be set to true for the multi-server-policy API
          type: boolean
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: serverId
          description: Unique server name
          type: string
        - in: query
          name: storageRegion
          description: Region where backups are stored, can be US EAST, US WEST, CANADA,
            GREAT BRITAIN, GERMANY, APAC
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/accountPolicies/{accountPolicyId}/serverPolicies/{serverPolicyId}:
      delete:
        summary: Delete Server Policy
        description: Delete a Server Policy under an Account Policy. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: delete-server-policy
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
      get:
        summary: Get Server Policy
        description: Get details of a specific server policy associated to an account
          policy. A server policy is unique record that ties a backup (account) policy
          to a specific server and storage region. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-server-policy
        parameters:
        - in: query
          name: accountPolicyId
          description: Unique ID of an account policy
          type: string
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: expirationDate
          description: Date all data retention will elapse; unsubscribedDate+retentionDays
          type: integer
        - in: query
          name: serverId
          description: Unique server name
          type: string
        - in: query
          name: serverPolicyId
          description: Unique Id of the Server Policy
          type: string
        - in: query
          name: status
          description: The status of the backup Policy. ACTIVE, INACTIVE, PROVISIONING,
            ERROR, DELETED, PENDING_INSTALL
          type: string
        - in: query
          name: storageAccountId
          description: Not currently used
          type: string
        - in: query
          name: storageRegion
          description: Region where backups are stored
          type: string
        - in: query
          name: unsubscribedDate
          description: Date policy was inactivated
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
      patch:
        summary: Patch Policy
        description: Updates specific values of a server policy. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: patch-policy
        parameters:
        - in: query
          name: accountPolicyId
          description: Unique ID of an account policy
          type: string
        - in: query
          name: op
          description: 'The patch operation to perform: add, remove, replace'
          type: string
        - in: query
          name: path
          description: 'The only change allowed currently is to the status.  Valid transitions
            are: ERROR to INACTIVE, PENDING_INSTALL to INACTIVE, and PROVISIONING to
            INACTIVE'
          type: string
        - in: query
          name: serverPolicyId
          description: Unique Id of the Server Policy
          type: string
        - in: query
          name: value
          description: The new value to set path to.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/accountPolicies/{accountPolicyId}/serverPolicies/{serverPolicyId}/restorePointDetails:
      get:
        summary: Get Restore Point Details
        description: Gets a list of restore point details. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-restore-point-details
        parameters:
        - in: query
          name: accountPolicyId
          description: Unique Id of the Account Policy
          type: string
        - in: query
          name: ascendingSort
          type: boolean
        - in: query
          name: backupFinishedDate
          description: Timestamp of backup completion
          type: string
        - in: query
          name: backupFinishedEndDate
          description: Valid date format is YYYY-MM-DD
          type: string
        - in: query
          name: backupFinishedStartDate
          description: Valid date format is YYYY-MM-DD
          type: string
        - in: query
          name: backupStartedDate
          description: Timestamp of backup start
          type: string
        - in: query
          name: bytesFailedToTransfer
          description: Total bytes of backup data that failed transfer to storage
          type: integer
        - in: query
          name: bytesInStorageForItemsRemoved
          description: Total bytes of data removed from local disk
          type: integer
        - in: query
          name: bytesTransferredToStorage
          description: Total bytes of backup data sent to storage
          type: integer
        - in: query
          name: filesFailedTransferToStorage
          description: Number of backup files that failed transfer to storage
          type: integer
        - in: query
          name: filesRemovedFromDisk
          description: Number of files removed from local disk
          type: integer
        - in: query
          name: filesTransferredToStorage
          description: Number of backup files transferred to storage
          type: integer
        - in: query
          name: inRetentionOnly
          type: boolean
        - in: query
          name: limit
          description: Limit the number of records returned
          type: integer
        - in: query
          name: numberOfProtectedFiles
          description: Number of files currently in storage for the restore point
          type: integer
        - in: query
          name: offset
          type: integer
        - in: query
          name: policyId
          description: Unique policy identifier
          type: string
        - in: query
          name: restorePointCreationStatus
          description: SUCCESS, PARTIAL_SUCCESS, FAILED, or CANCELLED
          type: string
        - in: query
          name: restorePointId
          description: Unique restore point identifier
          type: string
        - in: query
          name: retentionDays
          description: Days of retention applied to the restore point
          type: integer
        - in: query
          name: retentionExpiredDate
          description: Timestamp or retention expiration
          type: string
        - in: query
          name: serverPolicyId
          description: Unique Id of the Server Policy
          type: string
        - in: query
          name: sortBy
          description: 'Sort results by: [policyId, retentionDay, backupStartedDate,
            backupFinishedDate, retentionExpiredDate, backupStatus, filesTransferredToStorage,
            bytesTransferredToStorage, filesFailedTransferToStorage, bytesFailedToTransfer,
            unchangedFilesNotTransferred, unchangedBytesNotTransferred, filesRemovedFromDisk,
            bytesRemovedFromDisk]'
          type: string
        - in: query
          name: unchangedBytesInStorage
          description: Total bytes of unchanged data not requiring retransfer to storage
          type: integer
        - in: query
          name: unchangedFilesNotTransferred
          description: Number of unchanged files not requiring retransfer to storage
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/accountPolicies/{accountPolicyId}/serverPolicies/{serverPolicyId}/storedData:
      get:
        summary: Get Stored Data By Server Policy
        description: Gets the amount of stored data for a server policy on a specified
          date. Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-stored-data-by-server-policy
        parameters:
        - in: query
          name: accountPolicyId
          description: Unique account policy identifier
          type: string
        - in: query
          name: bytesStored
          description: Amount of stored backup data in bytes
          type: string
        - in: query
          name: gigabytesStored
          description: Amount of stored backup data in gigabytes
          type: string
        - in: query
          name: searchDate
          description: Valid date format is YYYY-MM-DD
          type: string
        - in: query
          name: serverPolicyId
          description: Unique server policy identifier
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/datacenters:
      get:
        summary: Get Datacenter List
        description: Get a list of CLC Data Centers. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-datacenter-list
        parameters:
        - in: query
          name: datacenters
          description: Array of string values corresponding to each datacenter
          type: array[string]
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/datacenters/{datacenter}/servers:
      get:
        summary: Get Servers By Datacenter
        description: Get a list of servers based on CLC Data Center. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-servers-by-datacenter
        parameters:
        - in: query
          name: datacenter
          description: CLC Data Center
          type: string
        - in: query
          name: list
          description: Array of string values corresponding to each server
          type: array[string]
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/osTypes:
      get:
        summary: Get OS Types
        description: Returns the list of valid OS types supported by Simple Backup Service.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-os-types
        parameters:
        - in: query
          name: osTypes
          description: Array of string values corresponding to each supported OS type
          type: array[string]
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/regions:
      get:
        summary: Get All Regions
        description: Retrieves a list of backup storage regions which are available
          in Simple Backup Service. Calls to this operation must include a token acquired
          from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-all-regions
        parameters:
        - in: query
          name: messages
          description: A list of messages associated with the Storage Region
          type: array[string]
        - in: query
          name: name
          description: The name of the Storage Region
          type: string
        - in: query
          name: regionLabel
          description: The label associated with the Storage Region
          type: string
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /clc-backup-api/api/serverPolicyDetails:
      get:
        summary: Get Policy Details By Server
        description: Get policy details by server. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-policy-details-by-server
        parameters:
        - in: query
          name: accountPolicyId
          description: Unique ID of an account policy
          type: string
        - in: query
          name: accountPolicyStatus
          description: The status of the backup Policy. Either ACTIVE or INACTIVE
          type: string
        - in: query
          name: backupIntervalHours
          description: The backup frequency of the Policy specified in hours
          type: integer
        - in: query
          name: backupProvider
          description: Not currently used
          type: string
        - in: query
          name: clcAccountAlias
          description: The account alias that the Policy belongs to
          type: string
        - in: query
          name: eligibleForBackup
          description: Indicates if the account policy or server policy are active/inactive
          type: boolean
        - in: query
          name: name
          description: The name of the Policy
          type: string
        - in: query
          name: osType
          description: Linux or Windows
          type: string
        - in: query
          name: paths
          description: A list of the directories that the Policy includes in each backup
          type: array[string]
        - in: query
          name: retentionDays
          description: The number of days backup data will be retained
          type: integer
        - in: query
          name: serverId
          description: Unique server name
          type: string
        - in: query
          name: serverPolicyId
          description: Unique server policy identifier
          type: string
        - in: query
          name: serverPolicyStatus
          description: Status of the backup policy. ACTIVE,INACTIVE,PROVISIONING,ERROR,DELETED
          type: array[string]
        - in: query
          name: storageRegion
          description: Region where backups are stored. US EAST, US WEST, CANADA, GREAT
            BRITAIN, GERMANY, APAC
          type: string
        - in: query
          name: withStatus
          description: Status of the backup policy. ACTIVE,INACTIVE,PROVISIONING,ERROR,DELETED
          type: array[string]
        responses:
          200:
            description: OK
        tags:
        - Backups
        security: []
    /datacenters/{accountAlias}:
      get:
        summary: Get Data Center List
        description: Gets the list of data centers that a given account has access to.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-data-center-list
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: Short value representing the data center code
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this data center
          type: array
        - in: query
          name: name
          description: Full, friendly name of the data center
          type: string
        responses:
          200:
            description: OK
        tags:
        - Data Centers
        security: []
    /datacenters/{accountAlias}/{dataCenter}:
      get:
        summary: Get Datacenters
        description: Get a list of datacenters providing RDBS subscriptions. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-datacenters
        responses:
          200:
            description: OK
        tags:
        - Data Centers
        security: []
    /datacenters/{accountAlias}/{dataCenter}/bareMetalCapabilities:
      get:
        summary: Get Data Center Bare Metal Capabilities
        description: Gets the list of bare metal capabilities that a specific data center
          supports for a given account, including the list of configuration types and
          the list of supported operating systems. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-data-center-bare-metal-capabilities
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: availability
          description: 'The level of availability for the given configuration: either
            `high`, `low`, or `none `.'
          type: string
        - in: query
          name: capacityGB
          description: Memory capacity in gigabytes
          type: number
        - in: query
          name: coresPerSocket
          description: Number of cores for each processor socket
          type: number
        - in: query
          name: DataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](get-data-center.md)
            API operation.
          type: string
        - in: query
          name: description
          description: Description of the processor including model and clock speed
          type: string
        - in: query
          name: hourlyRate
          description: Price per hour for the given configuration.
          type: number
        - in: query
          name: hourlyRatePerSocket
          description: Price per hour per socket for the OS type.
          type: number
        - in: query
          name: id
          description: The configurationId to pass to the [Create Server](../Servers/create-server.md)
            API operation when creating a bare metal server.
          type: string
        - in: query
          name: memory
          description: Information about the memory on the server.
          type: complex
        - in: query
          name: operatingSystems
          description: Collection of available operating systems when creating a bare
            metal server
          type: array
        - in: query
          name: processor
          description: Information about the physical processors on the server.
          type: complex
        - in: query
          name: skus
          description: Collection of available bare metal configuration types to pass
            in to configurationId when creating a bare metal server
          type: array
        - in: query
          name: sockets
          description: Number of sockets
          type: number
        - in: query
          name: speedRpm
          description: RPM (revolutions per minutes) speed of the disk
          type: number
        - in: query
          name: storage
          description: Collection of disk information, each item representing one physical
            disk on the server.
          type: complex
        - in: query
          name: type
          description: Drive capacity in gigabytes
          type: string
        responses:
          200:
            description: OK
        tags:
        - Data Centers
        security: []
    /datacenters/{accountAlias}/{dataCenter}/deploymentCapabilities:
      get:
        summary: Get Data Center Deployment Capabilities
        description: Gets the list of capabilities that a specific data center supports
          for a given account, including the deployable networks, OS templates, and
          whether features like premium storage and shared load balancer configuration
          are available. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-data-center-deployment-capabilities
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: accountID
          description: Account alias for the account in which the network exists
          type: string
        - in: query
          name: capabilities
          description: 'List of capabilities supported by this specific OS template
            (example: whether adding CPU or memory requires a reboot or not)'
          type: array
        - in: query
          name: DataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](get-data-center.md)
            API operation.
          type: string
        - in: query
          name: deployableNetworks
          description: Collection of networks that can be used for deploying servers
          type: array
        - in: query
          name: description
          description: Description of the template at it appears in the Control Portal
            UI
          type: string
        - in: query
          name: drivePathLength
          description: Length of the string for naming a drive path, if applicable
          type: integer
        - in: query
          name: importableOSTypes
          description: Collection of available OS types that can be imported as virtual
            machines.
          type: array
        - in: query
          name: name
          description: User-defined name of the network
          type: string
        - in: query
          name: networkId
          description: Unique identifier of the network
          type: string
        - in: query
          name: reservedDrivePaths
          description: List of drive path names reserved by the OS that cant be used
            to name user-defined drives
          type: array
        - in: query
          name: storageSizeGB
          description: The amount of storage allocated for the primary OS root drive
          type: integer
        - in: query
          name: supportsBareMetalServers
          description: Whether or not this data center provides support for provisioning
            bare metal servers
          type: boolean
        - in: query
          name: supportsPremiumStorage
          description: Whether or not this data center provides support for servers
            with premium storage
          type: boolean
        - in: query
          name: supportsSharedLoadBalancer
          description: Whether or not this data center provides support for shared load
            balancer configuration
          type: boolean
        - in: query
          name: templates
          description: Collection of available templates in the data center that can
            be used to create servers
          type: array
        - in: query
          name: type
          description: Network type, usually private for networks created by the user
          type: string
        responses:
          200:
            description: OK
        tags:
        - Data Centers
        security: []
    /datacenters/{accountAlias}/{dataCenter}?groupLinks=true|false:
      get:
        summary: Get Data Center
        description: Gets the details of a specific data center the account has access
          to. Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-data-center
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](get-data-center.md)
            API operation.
          type: string
        - in: query
          name: GroupLinks
          description: Determine whether link collections are returned for each group
          type: boolean
        - in: query
          name: id
          description: Short value representing the data center code
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this data center
          type: array
        - in: query
          name: name
          description: Full, friendly name of the data center
          type: string
        responses:
          200:
            description: OK
        tags:
        - Data Centers
        security: []
    /experimental/firewallPolicies/{sourceAccountAlias}/{dataCenter}:
      post:
        summary: Create an Intra Data Center Firewall Policy
        description: Creates a firewall policy for a given account in a given data center
          (intra data center firewall policy). Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: create-an-intra-data-center-firewall-policy
        parameters:
        - in: query
          name: dataCenter
          description: Short string representing the target data center for the new
            policy. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: destination
          description: Destination addresses for traffic on the terminating firewall,
            specified using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: destinationAccount
          description: Short code for a particular account
          type: string
        - in: query
          name: ports
          description: 'Type of ports associated with the policy. Supported ports include:
            `any`, `icmp`, TCP and UDP with single ports (`tcp/123`, `udp/123`) and
            port ranges (`tcp/123-456`, `udp/123-456`). Some common ports include: `tcp/21`
            (for FTP), `tcp/990` (FTPS), `tcp/80` (HTTP 80), `tcp/8080` (HTTP 8080),
            `tcp/443` (HTTPS 443), `icmp` (PING), `tcp/3389` (RDP), and `tcp/22` (SSH/SFTP).'
          type: string
        - in: query
          name: source
          description: Source addresses for traffic on the originating firewall, specified
            using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing),
            on the originating firewall
          type: string
        - in: query
          name: sourceAccountAlias
          description: Short code for a particular account
          type: string
        responses:
          200:
            description: OK
        tags:
        - Firewall Policy
        security: []
    /experimental/firewallPolicies/{sourceAccountAlias}/{dataCenter}/{firewallPolicy}:
      delete:
        summary: Delete an Intra Data Center Firewall Policy
        description: Deletes a firewall policy for a given account in a given data center
          (intra data center firewall policy). Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: delete-an-intra-data-center-firewall-policy
        responses:
          200:
            description: OK
        tags:
        - Firewall Policy
        security: []
      get:
        summary: Get Intra Data Center Firewall Policy
        description: Gets the details of a specific firewall policy associated with
          a given account in a given data center (an intra data center firewall policy).
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-intra-data-center-firewall-policy
        parameters:
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: destination
          description: Destination addresses for traffic on the terminating firewall,
            specified using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: destinationAccount
          description: Short code for a particular account
          type: string
        - in: query
          name: enabled
          description: Indicates if the policy is enabled (`true`) or disabled (`false`)
          type: boolean
        - in: query
          name: firewallPolicy
          description: ID of the firewall policy
          type: string
        - in: query
          name: id
          description: ID of the firewall policy
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this list of firewall policies
          type: array
        - in: query
          name: ports
          description: 'Type of ports associated with the policy. Supported ports include:
            `any`, `icmp`, TCP and UDP with single ports (`tcp/123`, `udp/123`) and
            port ranges (`tcp/123-456`, `udp/123-456`). Some common ports include: `tcp/21`
            (for FTP), `tcp/990` (FTPS), `tcp/80` (HTTP 80), `tcp/8080` (HTTP 8080),
            `tcp/443` (HTTPS 443), `icmp` (PING), `tcp/3389` (RDP), and `tcp/22` (SSH/SFTP).'
          type: string
        - in: query
          name: source
          description: Source addresses for traffic on the originating firewall, specified
            using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: sourceAccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: status
          description: The state of the policy; either `active` (policy is available
            and working as expected), `error` (policy creation did not complete as expected)
            or `pending` (the policy is in the process of being created)
          type: string
        responses:
          200:
            description: OK
        tags:
        - Firewall Policy
        security: []
      put:
        summary: Update Intra Data Center Firewall Policy
        description: Updates a given firewall policy associated with a given account
          in a given data center (an intra data center firewall policy). Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: update-intra-data-center-firewall-policy
        parameters:
        - in: query
          name: dataCenter
          description: Short string representing the data center associated with the
            policy of interest. Valid codes can be retrieved from the [Get Data Center
            List](../Data Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: destination
          description: Destination addresses for traffic on the terminating firewall,
            specified using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: destinationAccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: enabled
          description: Indicates if the policy is enabled (`true`) or disabled (`false`)
          type: boolean
        - in: query
          name: ports
          description: 'Type of ports associated with the policy. Supported ports include:
            `any`, `icmp`, TCP and UDP with single ports (`tcp/123`, `udp/123`) and
            port ranges (`tcp/123-456`, `udp/123-456`). Some common ports include: `tcp/21`
            (for FTP), `tcp/990` (FTPS), `tcp/80` (HTTP 80), `tcp/8080` (HTTP 8080),
            `tcp/443` (HTTPS 443), `icmp` (PING), `tcp/3389` (RDP), and `tcp/22` (SSH/SFTP).'
          type: string
        - in: query
          name: source
          description: Source addresses for traffic on the originating firewall, specified
            using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: sourceAccountAlias
          description: Short code for a particular account
          type: string
        responses:
          200:
            description: OK
        tags:
        - Firewall Policy
        security: []
    /experimental/firewallPolicies/{sourceAccountAlias}/{dataCenter}?destinationAccount={destinationAccountAlias}:
      get:
        summary: Get Intra Data Center Firewall Policy List
        description: Gets the list of firewall policies associated with a given account
          in a given data center (intra data center firewall policies). Users can optionally
          filter results by requesting policies associated with a second destination
          account. Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-intra-data-center-firewall-policy-list
        parameters:
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: destination
          description: Destination addresses for traffic on the terminating firewall,
            specified using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: destinationAccount
          description: Short code for a particular account
          type: string
        - in: query
          name: destinationAccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: enabled
          description: Indicates if the policy is enabled (`true`) or disabled (`false`)
          type: boolean
        - in: query
          name: id
          description: ID of the firewall policy
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this list of firewall policies
          type: array
        - in: query
          name: ports
          description: 'Type of ports associated with the policy. Supported ports include:
            `any`, `icmp`, TCP and UDP with single ports (`tcp/123`, `udp/123`) and
            port ranges (`tcp/123-456`, `udp/123-456`). Some common ports include: `tcp/21`
            (for FTP), `tcp/990` (FTPS), `tcp/80` (HTTP 80), `tcp/8080` (HTTP 8080),
            `tcp/443` (HTTPS 443), `icmp` (PING), `tcp/3389` (RDP), and `tcp/22` (SSH/SFTP).'
          type: string
        - in: query
          name: source
          description: Source addresses for traffic on the originating firewall, specified
            using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: sourceAccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: status
          description: 'The state of the policy: either `active` (policy is available
            and working as expected), `error` (policy creation did not complete as expected)
            or `pending` (the policy is in the process of being created)'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Firewall Policy
        security: []
    /experimental/networks/{accountAlias}/{dataCenter}:
      get:
        summary: Get Network List
        description: Gets the list of networks available for a given account in a given
          data center. Calls to this operation must include a token acquired from the
          authentication endpoint. See the [Login API](../Authentication/login.md) for
          information on acquiring this token.
        operationId: get-network-list
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cidr
          description: The network address, specified using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: description
          description: Description of VLAN, a free text field that defaults to the VLAN
            number combined with the network address
          type: string
        - in: query
          name: gateway
          description: Gateway IP address of the network
          type: string
        - in: query
          name: id
          description: ID of the network
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this list of networks
          type: array
        - in: query
          name: name
          description: User-defined name of the network; the default is the VLAN number
            combined with the network address
          type: string
        - in: query
          name: netmask
          description: A screen of numbers used for routing traffic within a subnet
          type: string
        - in: query
          name: type
          description: Network type, usually `private` for networks created by the user
          type: string
        - in: query
          name: vlan
          description: Unique number assigned to the VLAN
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Networks
        security: []
    /experimental/networks/{accountAlias}/{dataCenter}/claim:
      post:
        summary: Claim Network
        description: Claims a network for a given account in a given data center. Calls
          to this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: claim-network
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: operationId
          description: Unique identifier for network claim operation
          type: string
        - in: query
          name: uri
          description: URI to check status of operation
          type: string
        responses:
          200:
            description: OK
        tags:
        - Networks
        security: []
    /experimental/networks/{accountAlias}/{dataCenter}/{Network}:
      put:
        summary: Update Network
        description: Updates the attributes of a given Network via PUT. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: update-network
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: description
          description: Description of VLAN, a free text field that defaults to the VLAN
            number combined with the network address
          type: string
        - in: query
          name: name
          description: User-defined name of the network; the default is the VLAN number
            combined with the network address
          type: string
        - in: query
          name: Network
          description: ID of the Network. These can be retrieved from the [Get Network
            List](../Networks/get-network-list.md) API operation
          type: string
        responses:
          200:
            description: OK
        tags:
        - Networks
        security: []
    /experimental/networks/{accountAlias}/{dataCenter}/{Network}/ipAddresses?type=claimed|free|all:
      get:
        summary: Get IP Address List
        description: Gets the list of IP addresses for a network in a given data center
          for a given account. Calls to this operation must include a token acquired
          from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-ip-address-list
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: address
          description: An IP Address on the Network
          type: string
        - in: query
          name: claimed
          description: Indicates claimed status of the address, either `true` or `false`
          type: boolean
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: Network
          description: ID of the Network. These can be retrieved from the [Get Network
            List](../Networks/get-network-list.md) API operation
          type: string
        - in: query
          name: server
          description: ID of the server associated with the IP address, if claimed
          type: string
        - in: query
          name: type
          description: 'Optional component of the query to request details of IP Addresses
            in a certain state. Should be one of the following: claimed (returns details
            of the network as well as information about claimed IP addresses), free
            (returns details of the network as well as information about free IP addresses)
            or all (returns details of the network as well as information about all
            IP addresses)'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Networks
        security: []
    /experimental/networks/{accountAlias}/{dataCenter}/{Network}/release:
      post:
        summary: Release Network
        description: Releases a network from a given account in a given data center
          to a pool for another user to claim. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: release-network
        responses:
          200:
            description: OK
        tags:
        - Networks
        security: []
    /experimental/networks/{accountAlias}/{dataCenter}/{Network}?ipAddresses=none|claimed|free|all:
      get:
        summary: Get Network
        description: Gets the details of a specific network in a given data center for
          a given account. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-network
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cidr
          description: The network address, specified using [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
          type: string
        - in: query
          name: dataCenter
          description: Short string representing the data center you are querying. Valid
            codes can be retrieved from the [Get Data Center List](../Data Centers/get-data-center.md)
            API operation.
          type: string
        - in: query
          name: description
          description: Description of VLAN, a free text field that defaults to the VLAN
            number combined with the network address
          type: string
        - in: query
          name: gateway
          description: Gateway IP address of the network
          type: string
        - in: query
          name: id
          description: ID of the network
          type: string
        - in: query
          name: ipAddresses
          description: 'Optional component of the query to request details of IP Addresses
            in a certain state. Should be one of the following: none (returns details
            of the network only), claimed (returns details of the network as well as
            information about claimed IP addresses), free (returns details of the network
            as well as information about free IP addresses) or all (returns details
            of the network as well as information about all IP addresses). Refer to
            [Get IP Address List](../Networks/get-ip-address-list.md) for the data shape
            of returned IP addresses.'
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this list of networks
          type: array
        - in: query
          name: name
          description: User-defined name of the network; the default is the VLAN number
            combined with the network address
          type: string
        - in: query
          name: netmask
          description: A screen of numbers used for routing traffic within a subnet
          type: string
        - in: query
          name: Network
          description: ID of the Network. This can be retrieved from the [Get Network
            List](../Networks/get-network-list.md) API operation.
          type: string
        - in: query
          name: type
          description: Network type, usually `private` for networks created by the user
          type: boolean
        - in: query
          name: vlan
          description: Unique number assigned to the VLAN
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Networks
        security: []
    /groups/{accountAlias}:
      post:
        summary: Create Group
        description: Creates a new group. Calls to this operation must include a token
          acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: create-group
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: customFields
          description: Collection of custom field ID-value pairs to set for the server.
          type: complex
        - in: query
          name: description
          description: User-defined description of this group
          type: string
        - in: query
          name: id
          description: ID of the custom field to set. Available custom field IDs can
            be retrieved from the [Get Custom Fields](../Custom Fields/get-custom-fields.md)
            API operation.
          type: string
        - in: query
          name: name
          description: Name of the group to create.
          type: string
        - in: query
          name: parentGroupId
          description: ID of the parent group. Retrieved from query to parent group,
            or by looking at the URL on the UI pages in the Control Portal.
          type: string
        - in: query
          name: value
          description: Value to set the custom field to for this server.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}:
      delete:
        summary: Delete Group
        description: Sends the delete operation to a given group and adds operation
          to queue. This operation will delete the group and all servers and groups
          underneath it. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: delete-group
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: GroupId
          description: ID of the group to be deleted. Retrieved from query to parent
            group, or by looking at the URL on the new UI pages in the Control Portal.
          type: string
        - in: query
          name: href
          description: /v2/operations/[ALIAS]/status/[ID]
          type: string
        - in: query
          name: id
          description: '[ID]'
          type: string
        - in: query
          name: rel
          description: status
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
      get:
        summary: Get Group
        description: Gets the details for a individual server group and any sub-groups
          and servers that it contains. Calls to this operation must include a token
          acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-group
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account.
          type: string
        - in: query
          name: changeInfo
          description: Describes created and modified details
          type: complex
        - in: query
          name: createdBy
          description: Who created the group
          type: string
        - in: query
          name: createdDate
          description: Date/time that the group was created
          type: datetime
        - in: query
          name: customFields
          description: Details about any custom fields and their values
          type: complex
        - in: query
          name: description
          description: User-defined description of this group
          type: string
        - in: query
          name: displayValue
          description: Shown value of the field
          type: string
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL on the new UI pages in the Control Portal.
          type: string
        - in: query
          name: groups
          description: Refers to this same entity type for each sub-group
          type: array
        - in: query
          name: id
          description: ID of the group being queried
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this group
          type: array
        - in: query
          name: locationId
          description: Data center location identifier
          type: string
        - in: query
          name: modifiedBy
          description: Who modified the group last
          type: string
        - in: query
          name: modifiedDate
          description: Date/time that the group was last updated
          type: datetime
        - in: query
          name: name
          description: User-defined name of the group
          type: string
        - in: query
          name: serversCount
          description: Number of servers this group contains
          type: integer
        - in: query
          name: status
          description: Describes if group is online or not
          type: string
        - in: query
          name: type
          description: Group type which could include system types like archive
          type: string
        - in: query
          name: value
          description: Underlying value of the field
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
      patch:
        summary: Set Group Custom Fields
        description: Changes the custom field values for an existing group. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: set-group-custom-fields
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: GroupId
          description: ID of the group to update. Retrieved from query to containing
            group, or by looking at the URL when viewing a group in the Control Portal.
          type: string
        - in: query
          name: member
          description: The property of the group to perform the operation on. In this
            case, the value will be customFields.
          type: string
        - in: query
          name: op
          description: The operation to perform on a given property of the group. In
            this case, the value must be set for setting the custom field values.
          type: string
        - in: query
          name: patchOperation
          description: A list of properties, values, and the operations to perform with
            them for the group.
          type: array
        - in: query
          name: value
          description: 'A list of id-value pairs for _all custom fields_ including all
            required values and other custom field values that you wish to set._Note:
            You must specify the complete list of custom field values to set on the
            group. If you want to change only one value, specify all existing field
            values along with the new value for the field you wish to change. To unset
            the value for an unrequired field, you may leave the field id-value pairing
            out, however all required fields must be included. (You can get existing
            custom field value info by using the [Get Group](get-group.md) call to see
            all the details of the group or the [Get Custom Fields](../Custom Fields/get-custom-fields.md)
            call to see available custom fields for a given account.)_'
          type: array
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/archive:
      post:
        summary: Archive Group
        description: Sends the archive operation to a group. (See [Understanding VM
          Deployment Options and Power States](http://www.ctl.io/knowledge-base/servers/understanding-vm-deployment-options-and-power-states/#archive)
          for details on the archive operation.) Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: archive-group
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account.
          type: string
        - in: query
          name: GroupID
          description: ID of the group to archive. Retrieved from query to parent group,
            or by looking at the URL on the new UI pages in the Control Portal.
          type: string
        - in: query
          name: href
          description: /v2/operations/[ALIAS]/status/[ID]
          type: string
        - in: query
          name: id
          description: '[ID]'
          type: string
        - in: query
          name: rel
          description: status
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/billing:
      get:
        summary: Get Group Billing Details
        description: Gets the current and estimated charges for each server in a designated
          group hierarchy. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-group-billing-details
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: archiveCost
          description: Cost of archived servers in this group
          type: float
        - in: query
          name: currentHour
          description: Charges for the most recent hour
          type: float
        - in: query
          name: date
          description: Date that this billing information applies to
          type: datetime
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL on the new UI pages in the Control Portal
          type: string
        - in: query
          name: groups
          description: List of groups (with the first being the queried group) in the
            requested hierarchy. Group ID listed before each group entity description
          type: array
        - in: query
          name: monthlyEstimate
          description: Projected charges for the servers given current usage
          type: float
        - in: query
          name: monthToDate
          description: Charges up until the requested time
          type: float
        - in: query
          name: name
          description: User-defined name of the group
          type: string
        - in: query
          name: servers
          description: Collection of servers in this group, each with billing information.
            Server ID listed before each entity description
          type: array
        - in: query
          name: templateCost
          description: Cost of templates stored in the group
          type: float
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/defaults:
      post:
        summary: Set Group Defaults
        description: Sets the defaults for a group. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: set-group-defaults
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cpu
          description: Number of processors to configure the server with (1-16) (ignored
            for bare metal servers)
          type: integer
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL of the Group in the Control Portal UI.
          type: string
        - in: query
          name: memoryGB
          description: Number of GB of memory to configure the server with (1-128) (ignored
            for bare metal servers)
          type: integer
        - in: query
          name: networkId
          description: ID of the Network. This can be retrieved from the Get Network
            List API operation.
          type: string
        - in: query
          name: primaryDns
          description: Primary DNS to set on the server. If not supplied the default
            value set on the account will be used.
          type: string
        - in: query
          name: secondaryDns
          description: Secondary DNS to set on the server. If not supplied the default
            value set on the account will be used.
          type: string
        - in: query
          name: templateName
          description: Name of the template to use as the source. The list of available
            templates for a given account in a data center can be retrieved from the
            [Get Data Center Deployment Capabilities](../Data Centers/get-data-center-deployment-capabilities.md)
            API operation. (Ignored for bare metal servers.)
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/horizontalAutoscalePolicy/:
      get:
        summary: Get Group Horizontal Autoscale Policy
        description: Retrieves the details of a horizontal autoscale policy associated
          with a group. Calls to this operation must include a token acquired from the
          authentication endpoint. See the [Login API](../Authentication/login.md) for
          information on acquiring this token.
        operationId: get-group-horizontal-autoscale-policy
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: availableServers
          description: The number of servers available for scaling
          type: int
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL of the Group in the Control Portal UI.
          type: string
        - in: query
          name: id
          description: ID of the load balancer
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this data center
          type: array
        - in: query
          name: loadBalancer
          description: Information about the load balancer associated with the policy
          type: complex
        - in: query
          name: locationId
          description: Data center location identifier
          type: string
        - in: query
          name: name
          description: Name of the Policy
          type: string
        - in: query
          name: policyId
          description: The unique identifier of the autoscale policy
          type: string
        - in: query
          name: privatePort
          description: The internal (private) port of the node server
          type: int
        - in: query
          name: publicIP
          description: The external (public) IP address of the load balancer
          type: string
        - in: query
          name: publicPort
          description: Port configured on the public-facing side of the load balancer
            pool.
          type: int
        - in: query
          name: scaleDirection
          description: Direction to Scale (In or Out )
          type: string
        - in: query
          name: scaleResourceReason
          description: 'Reason for scaling, either: CPU, Memory, MinimumResourceCount,
            or None'
          type: string
        - in: query
          name: targetSize
          description: Number of servers to scale to
          type: int
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
      put:
        summary: Set Group Horizontal Autoscale Policy
        description: Applies a horizontal autoscale policy to a group. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: set-group-horizontal-autoscale-policy
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/restore:
      post:
        summary: Restore Group
        description: Sends the restore operation to an archived group. (See [Understanding
          VM Deployment Options and Power States](http://www.ctl.io/knowledge-base/servers/understanding-vm-deployment-options-and-power-states/#archive)
          for details on the archive operation.) Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: restore-group
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account.
          type: string
        - in: query
          name: errorMessage
          description: If something goes wrong or the request is not queued, this is
            the message that contains the details about what happened.
          type: string
        - in: query
          name: GroupID
          description: ID of the group to restore. Retrieved from query to parent group,
            or by looking at the URL on the new UI pages in the Control Portal.
          type: string
        - in: query
          name: isQueued
          description: Boolean indicating whether the operation was successfully added
            to the queue.
          type: boolean
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this group operation.
          type: array
        - in: query
          name: targetGroupId
          description: The unique identifier of the target group to restore the group
            to.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/ScheduledActivities/:
      get:
        summary: Get Group Scheduled Activities
        description: Gets the scheduled activities associated with a group. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-group-scheduled-activities
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: beginDateUtc
          description: Time when scheduled activity should start
          type: datetime
        - in: query
          name: changeInfo
          description: Change history
          type: complex
        - in: query
          name: customWeeklyDays
          description: 'An array of strings for the days of the week: sun, mon, tue,
            wed, thu, fri, sat'
          type: array
        - in: query
          name: expire
          description: 'When the scheduled activities are set to expire: never, afterDate,
            afterCount'
          type: string
        - in: query
          name: expireCount
          description: Number of times scheduled activity should run before expiring
          type: int
        - in: query
          name: expireDateUtc
          description: When the scheduled activity should expire
          type: datetime
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL of the Group in the Control Portal UI.
          type: string
        - in: query
          name: id
          description: ID of the group
          type: string
        - in: query
          name: isExpired
          description: 'True: scheduled activity has expired. False: scheduled activity
            is active'
          type: bool
        - in: query
          name: lastOccurrenceDateUtc
          description: Last time scheduled activity was run
          type: datetime
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this data center
          type: array
        - in: query
          name: locationId
          description: Data center location identifier
          type: string
        - in: query
          name: nextOccurrenceDateUtc
          description: When the next scheduled activty will be run
          type: datetime
        - in: query
          name: occurrenceCount
          description: How many times scheduled activity has been run
          type: int
        - in: query
          name: repeat
          description: 'How often to repeat: never, daily, weekly, monthly, customWeekly'
          type: string
        - in: query
          name: status
          description: 'State of scheduled activity: on or off'
          type: string
        - in: query
          name: timeZoneOffset
          description: To display in local time
          type: string
        - in: query
          name: type
          description: 'Type of activity: archive, createsnapshot, delete, deletesnapshot,
            pause, poweron, reboot, shutdown'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
      post:
        summary: Set Group Scheduled Activities
        description: Sets scheduled activities for a group. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: set-group-scheduled-activities
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: beginDateUTC
          description: Time when scheduled activity should start
          type: datetime
        - in: query
          name: customWeeklyDays
          description: 'An array of strings for the days of the week: sun, mon, tue,
            wed, thu, fri, sat'
          type: array
        - in: query
          name: expire
          description: 'When the scheduled activities are set to expire: never, afterDate,
            afterCount'
          type: string
        - in: query
          name: expireCount
          description: Number of times scheduled activity should run before expiring
          type: int
        - in: query
          name: expireDateUTC
          description: When the scheduled activity should expire
          type: datetime
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL of the Group in the Control Portal UI.
          type: string
        - in: query
          name: repeat
          description: 'How often to repeat: never, daily, weekly, monthly, customWeekly'
          type: string
        - in: query
          name: status
          description: 'State of scheduled activity: on or off'
          type: string
        - in: query
          name: timeZoneOffset
          description: To display in local time
          type: string
        - in: query
          name: type
          description: 'Type of activity: archive, createsnapshot, delete, deletesnapshot,
            pause, poweron, reboot, shutdown'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /groups/{accountAlias}/{groupId}/statistics?type=hourly&start={datetime}&end={datetime}&sampleInterval={dd:hh:mm:ss}:
      get:
        summary: Get Group Monitoring Statistics
        description: Gets the resource consumption details for whatever window specified
          in the request. Data can be retrieve for a variety of time windows and intervals.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-group-monitoring-statistics
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: capacityMB
          description: Capacity (in MB) allocated for this disk
          type: integer
        - in: query
          name: consumedMB
          description: Amount of capacity in use by this partition
          type: integer
        - in: query
          name: cpu
          description: CPU allocation during the interval
          type: float
        - in: query
          name: cpuPercent
          description: CPU consumption (out of 100%) during the interval
          type: float
        - in: query
          name: diskUsage
          description: List of physical disks attached to the virtual machine
          type: array
        - in: query
          name: diskUsageTotalCapacityMB
          description: Total disk allocation during the interval
          type: float
        - in: query
          name: end
          description: DateTime (UTC) of the query window. Default is the current time
            in UTC. End date (and start date) must be within the past 14 days. Not a
            required value if results should be up to the current time.
          type: datetime
        - in: query
          name: GroupID
          description: ID of the group being queried. Retrieved from query to parent
            group, or by looking at the URL on the new UI pages in the Control Portal.
          type: string
        - in: query
          name: guestDiskUsage
          description: List of partitions used inside the guest OS
          type: array
        - in: query
          name: id
          description: Disk identifier
          type: string
        - in: query
          name: memoryMB
          description: Memory allocation during the interval
          type: float
        - in: query
          name: memoryPercent
          description: Memory consumption (out of 100%) during the interval
          type: float
        - in: query
          name: name
          description: Name of the server
          type: string
        - in: query
          name: networkReceivedKbps
          description: Public network consumption in during the interval
          type: float
        - in: query
          name: networkTransmittedKbps
          description: Public network consumption out during the interval
          type: float
        - in: query
          name: path
          description: Path of this partition
          type: string
        - in: query
          name: sampleInterval
          description: 'Result interval. For the default `hourly` type, the minimum
            value is 1 hour (01:00:00) and maximum is the full window size of 14 days.
            Note that interval must fit within start/end window, or you will get an
            exception that states: The end parameter must represent a time that occurs
            at least one sampleInterval before start. If `realtime` type is specified,
            interval can be as small as 5 minutes (05:00).'
          type: timespan
        - in: query
          name: start
          description: DateTime (UTC) of the query window. Note that statistics are
            only held for 14 days. Start date (and optional end date) must be within
            the past 14 days. Value is not required if choosing the `latest` query type.
          type: datetime
        - in: query
          name: stats
          description: Collection of stats for the server for the interval chosen
          type: array
        - in: query
          name: timestamp
          description: Timestamp of the monitoring results
          type: datetime
        - in: query
          name: type
          description: Valid values are `latest`, `hourly`, or `realtime`. `latest`
            will return a single data point that reflects the last monitoring data collected.
            No `start`, `end`, or `sampleInterval` values are required for this type.
            `hourly` returns data points for each `sampleInterval` value between the
            `start` and `end` times provided. The `start` and `sampleInterval` parameters
            are both required for this type. `realtime` will return data from the last
            4 hours, available in smaller increments. To use `realtime` type, start
            parameter must be within the last 4 hours. The `start` and `sampleInterval`
            parameters are both required for this type.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Groups
        security: []
    /invoice/{accountAlias}/{year}/{month}:
      get:
        summary: Get Invoice Data for an Account Alias
        description: 'Gets a list of invoicing data for a given account alias for a
          given month. Calls to this operation must include a token acquired from the
          authentication endpoint. See the [Login API](../Authentication/login.md) for
          information on acquiring this token.nn**NOTE: THE DATA RETURNED IN THIS API
          ARE USAGE ESTIMATES ONLY, AND DOES NOT REPRESENT AN ACTUAL BILL.**'
        operationId: get-invoice-data-for-an-account-alias
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: address1
          description: First line of the address associated with accountAlias
          type: string
        - in: query
          name: address2
          description: Second line of the address associated with accountAlias
          type: string
        - in: query
          name: billingContactEmail
          description: Billing email address associated with the accountAlias
          type: string
        - in: query
          name: city
          description: City associated with the accountAlias
          type: string
        - in: query
          name: companyName
          description: Description of the account name
          type: string
        - in: query
          name: description
          description: Text description of the line item
          type: string
        - in: query
          name: id
          description: ID of the account alias being queried
          type: string
        - in: query
          name: invoiceCCEmail
          description: Additional billing email address associated with the accountAlias
          type: string
        - in: query
          name: invoiceDate
          description: Date the invoice is finalized
          type: string
        - in: query
          name: itemDetails
          description: Details about the line item
          type: complex
        - in: query
          name: itemTotal
          description: Total cost of the line item
          type: decimal
        - in: query
          name: lineItems
          description: Usage details of a resource or collection of similar resources
          type: array
        - in: query
          name: month
          description: Monthly period of usage, in M format.
          type: integer
        - in: query
          name: parentAccountAlias
          description: Short code for the parent account alias associated with the account
            alias being queried
          type: string
        - in: query
          name: poNumber
          description: Purchase Order associated with the Invoice
          type: string
        - in: query
          name: postalCode
          description: Postal code associated with the accountAlias
          type: string
        - in: query
          name: pricingAccountAlias
          description: Short code of the account that sends the invoice for the accountAlias
          type: string
        - in: query
          name: quantity
          description: Quantity of the line item
          type: integer
        - in: query
          name: serviceLocation
          description: Location of the line item
          type: string
        - in: query
          name: stateProvince
          description: State or province associated with the accountAlias
          type: string
        - in: query
          name: terms
          description: payment terms associated with the account
          type: string
        - in: query
          name: totalAmount
          description: Invoice amount in dollars
          type: decimal
        - in: query
          name: unitCost
          description: Unit cost of the line item
          type: decimal
        - in: query
          name: year
          description: Year of usage, in YYYY format.
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Invoices
        security: []
    /ips/api/app/:
      delete:
        summary: Uninstall Intrusion Protection Service Agent
        description: Uninstalls an IPS agent on the designated host. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: uninstall-intrusion-protection-service-agent
        responses:
          200:
            description: OK
        tags:
        - Intrusion Protection Service
        security: []
      post:
        summary: Install Intrusion Protection Service Agent
        description: Installs an IPS agent on the designated host. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: install-intrusion-protection-service-agent
        responses:
          200:
            description: OK
        tags:
        - Intrusion Protection Service
        security: []
    /operations/{accountAlias}/servers/archive:
      post:
        summary: Archive Server
        description: Sends the archive operation to a list of servers and adds operation
          to queue. (See [Understanding VM Deployment Options and Power States](http://www.ctl.io/knowledge-base/servers/understanding-vm-deployment-options-and-power-states/#archive)
          for details on the archive operation.) Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: archive-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform archive operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/createSnapshot:
      post:
        summary: Create Snapshot
        description: Sends the create snapshot operation to a list of servers (along
          with the number of days to keep the snapshot for) and adds operation to queue.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: create-snapshot
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server names to perform create snapshot operation on.
          type: array
        - in: query
          name: snapshotExpirationDays
          description: Number of days to keep the snapshot for (must be between 1 and
            10).
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/executePackage:
      post:
        summary: Execute Package
        description: Executes a single package on one or more servers. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: execute-package
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: package
          description: The package entity describing which package to run on the specified
            servers.
          type: complex
        - in: query
          name: packageId
          description: Unique identifier of the package to execute.
          type: string
        - in: query
          name: parameters
          description: Set of key-value pairs for setting the package-specific parameters
            defined.
          type: complex
        - in: query
          name: servers
          description: List of server IDs to run the package on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/pause:
      post:
        summary: Pause Server
        description: Sends the pause operation to a list of servers and adds operation
          to queue. (See [Description of Server Group Power Commands](http://www.ctl.io/knowledge-base/servers/descriptions-of-servergroup-power-commands/)
          for details on how the power off operation is used.) Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: pause-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform pause operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/powerOff:
      post:
        summary: Power Off Server
        description: Sends the power off operation to a list of servers and adds operation
          to queue. (See [Description of Server Group Power Commands](http://www.ctl.io/knowledge-base/servers/descriptions-of-servergroup-power-commands/)
          for details on how the power off operation is used.) Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: power-off-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform power off operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/powerOn:
      post:
        summary: Power On Server
        description: Sends the power on operation to a list of servers and adds operation
          to queue. (See [Description of Server Group Power Commands](http://www.ctl.io/knowledge-base/servers/descriptions-of-servergroup-power-commands/)
          for details on how the power off operation is used.) Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: power-on-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform power on operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/reboot:
      post:
        summary: Reboot Server
        description: Sends the reboot operation to a list of servers and adds operation
          to queue. (See [Description of Server Group Power Commands](http://www.ctl.io/knowledge-base/servers/descriptions-of-servergroup-power-commands/)
          for details on how the power off operation is used.) Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: reboot-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform reboot operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/reset:
      post:
        summary: Reset Server
        description: Sends the reset operation to a list of servers and adds operation
          to queue. (See [Description of Server Group Power Commands](http://www.ctl.io/knowledge-base/servers/descriptions-of-servergroup-power-commands/)
          for details on how the power off operation is used.) Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: reset-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform reset operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/setMaintenance:
      post:
        summary: Set Maintenance Mode
        description: Sends a specified setting for maintenance mode per server to a
          list of servers and adds operation to queue. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: set-maintenance-mode
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: ID of server to set maintenance mode on or off
          type: string
        - in: query
          name: inMaintenanceMode
          description: Indicator of whether to place server in maintenance mode or not
          type: boolean
        - in: query
          name: servers
          description: List of server ID and maintenance mode pairs to set.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/shutDown:
      post:
        summary: Shut Down Server
        description: Sends the shut down operation to a list of servers and adds operation
          to queue. (See [Description of Server Group Power Commands](http://www.ctl.io/knowledge-base/servers/descriptions-of-servergroup-power-commands/)
          for details on how the power off operation is used.) Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: shut-down-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to perform shut down operation on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/startMaintenance:
      post:
        summary: Start Maintenance Mode
        description: Sends a the start maintenance mode operation to a list of servers
          and adds operation to queue. Calls to this operation must include a token
          acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: start-maintenance-mode
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: errorMessage
          description: If something goes wrong or the request is not queued, this is
            the message that contains the details about what happened.
          type: string
        - in: query
          name: isQueued
          description: Boolean indicating whether the operation was successfully added
            to the queue.
          type: boolean
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this server operation.
          type: array
        - in: query
          name: server
          description: ID of the server that the operation was performed on.
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to start maintenance mode on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/servers/stopMaintenance:
      post:
        summary: Stop Maintenance Mode
        description: Sends a the stop maintenance mode operation to a list of servers
          and adds operation to queue. Calls to this operation must include a token
          acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: stop-maintenance-mode
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: serverIds
          description: List of server IDs to stop maintenance mode on.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /operations/{accountAlias}/status/{statusId}:
      get:
        summary: Get Status
        description: Gets the status of a particular job in the queue, which keeps track
          of any long-running asynchronous requests (such as server power operations
          or provisioning tasks). Calls to this operation must include a token acquired
          from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-status
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account.
          type: string
        - in: query
          name: Status
          description: 'The status of the operation. Will be one of the following: notStarted,
            executing, succeeded, failed, resumed or unknown.'
          type: string
        - in: query
          name: Status ID
          description: ID of the job to query. Retrieved from the status link in the
            response to a batch job request.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Operations
        security: []
    /rest/servers/{accountAlias}/server/{serverID}/patch:
      get:
        summary: Get a Summary of All Patches Deployed to a Server
        description: This service shows a history of all the patches deployed to a given
          server.rnrnCalls to this operation must include a token acquired from the
          authentication endpoint. See the [Login API](../Authentication/login.md) for
          information on acquiring this token.
        operationId: get-a-summary-of-all-patches-deployed-to-a-server
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /rest/servers/{alias}/server/{serverID}/patch/{execution_id}:
      get:
        summary: Get Details of Patches Applied to a Server During a Single Execution
        description: This services returns details on all attempted patches for a single
          execution against a server.rnrnCalls to this operation must include a token
          acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-details-of-patches-applied-to-a-server-during-a-single-execution
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}:
      post:
        summary: Clone Server
        description: Creates a new server as a clone of an existing server. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: clone-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: additionalDisks
          description: Collection of disk parameters (ignored for bare metal servers)
          type: complex
        - in: query
          name: antiAffinityPolicyId
          description: ID of the Anti-Affinity policy to associate the server with.
            Only valid for hyperscale servers. Available IDs can be retrieved from the
            [Get Anti-Affinity Policies](../Anti-Affinity Policies/get-anti-affinity-policies.md)
            API operation.
          type: string
        - in: query
          name: configurationId
          description: Only required for bare metal servers. Specifies the identifier
            for the specific configuration type of bare metal server to deploy. A list
            of possible configs can be retrieved from the [Get Data Center Bare Metal
            Capabilities](../Data Centers/get-data-center-bare-metal-capabilities.md)
            API operation. (Ignored for standard and hyperscale servers.)
          type: string
        - in: query
          name: cpu
          description: Number of processors to configure the server with (1-16) (ignored
            for bare metal servers)
          type: integer
        - in: query
          name: cpuAutoscalePolicyId
          description: ID of the vertical CPU Autoscale policy to associate the server
            with. Available IDs can be retrieved from the **Get Autoscale Policies**
            API operation. (Ignored for bare metal servers.)
          type: string
        - in: query
          name: customFields
          description: Collection of custom field ID-value pairs to set for the server.
          type: complex
        - in: query
          name: description
          description: User-defined description of this server
          type: string
        - in: query
          name: groupId
          description: ID of the parent group. Retrieved from query to parent group,
            or by looking at the URL on the UI pages in the Control Portal.
          type: string
        - in: query
          name: id
          description: ID of the custom field to set. Available custom field IDs can
            be retrieved from the [Get Custom Fields](../Custom Fields/get-custom-fields.md)
            API operation.
          type: string
        - in: query
          name: ipAddress
          description: IP address to assign to the server. If not provided, one will
            be assigned automatically. (Ignored for bare metal servers.)
          type: string
        - in: query
          name: isManagedBackup
          description: Whether to add managed backup to the server. Must be a managed
            OS server. (Ignored for bare metal servers.)
          type: bool
        - in: query
          name: isManagedOS
          description: Whether to create the server as managed or not. Default is false.
            (Ignored for bare metal servers.)
          type: bool
        - in: query
          name: memoryGB
          description: Number of GB of memory to configure the server with (1-128) (ignored
            for bare metal servers)
          type: integer
        - in: query
          name: name
          description: Name of the server to create. Alphanumeric characters and dashes
            only. Must be between 1-8 characters depending on the length of the account
            alias. The combination of account alias and server name here must be no
            more than 10 characters in length. (This name will be appended with a two
            digit number and prepended with the datacenter code and account alias to
            make up the final server name.)
          type: string
        - in: query
          name: networkId
          description: ID of the network to which to deploy the server. If not provided,
            a network will be chosen automatically. If your account has not yet been
            assigned a network, leave this blank and one will be assigned automatically.
            The list of available networks for a given account in a data center can
            be retrieved from the [Get Data Center Deployment Capabilities](../Data
            Centers/get-data-center-deployment-capabilities.md) API operation.
          type: string
        - in: query
          name: osType
          description: Only required for bare metal servers. Specifies the OS to provision
            with the bare metal server. Currently, the only supported OS types are `redHat6_64Bit`,
            `centOS6_64Bit`, `windows2012R2Standard_64Bit`, `windows2012R2Datacenter_64Bit`,
            `ubuntu14_64Bit`. A list of importable OS types for a given data center
            can be retrieved from the [Get Data Center Bare Metal Capabilities](../Data
            Centers/get-data-center-bare-metal-capabilities.md) API operation. (Ignored
            for standard and hyperscale servers.)
          type: string
        - in: query
          name: packageId
          description: ID of the package to run on the server after it builds. Available
            package IDs can be retrieved from the **Get Packages** API operation.
          type: string
        - in: query
          name: packages
          description: Collection of packages to run on the server after it has been
            built (ignored for bare metal servers)
          type: complex
        - in: query
          name: parameters
          description: Collection of name-value pairs to specify package-specific parameters.
          type: complex
        - in: query
          name: password
          description: Password of administrator or root user on server. If not provided,
            one will be generated automatically.
          type: string
        - in: query
          name: path
          description: File system path for disk (Windows drive letter or Linux mount
            point). Must not be one of reserved names.
          type: string
        - in: query
          name: primaryDns
          description: Primary DNS to set on the server. If not supplied the default
            value set on the account will be used.
          type: string
        - in: query
          name: secondaryDns
          description: Secondary DNS to set on the server. If not supplied the default
            value set on the account will be used.
          type: string
        - in: query
          name: sizeGB
          description: Amount in GB to allocate for disk, up to 1024 GB per.
          type: integer
        - in: query
          name: sourceServerId
          description: ID of the server to use a source. May be the ID of a template,
            or when cloning, an existing server ID. The list of available templates
            for a given account in a data center can be retrieved from the [Get Data
            Center Deployment Capabilities](../Data Centers/get-data-center-deployment-capabilities.md)
            API operation. (Ignored for bare metal servers.)
          type: string
        - in: query
          name: sourceServerPassword
          description: Password of the source server, used only when creating a clone
            from an existing server. (Ignored for bare metal servers.)
          type: string
        - in: query
          name: storageType
          description: For standard servers, whether to use standard or premium storage.
            If not provided, will default to premium storage. For hyperscale servers,
            storage type must be hyperscale. (Ignored for bare metal servers.)
          type: string
        - in: query
          name: ttl
          description: Date/time that the server should be deleted (ignored for bare
            metal servers)
          type: datetime
        - in: query
          name: type
          description: Whether to create a `standard`, `hyperscale`, or `bareMetal`
            server
          type: string
        - in: query
          name: value
          description: Value to set the custom field to for this server.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}:
      delete:
        summary: Delete Server
        description: Sends the delete operation to a given server and adds operation
          to queue. Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: delete-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: errorMessage
          description: If something goes wrong or the request is not queued, this is
            the message that contains the details about what happened.
          type: string
        - in: query
          name: isQueued
          description: Boolean indicating whether the delete operation was successfully
            added to the queue.
          type: boolean
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this server operation.
          type: array
        - in: query
          name: server
          description: ID of the server that is being deleted.
          type: string
        - in: query
          name: ServerId
          description: ID of the server to be deleted. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
      get:
        summary: Get Server
        description: Gets the details for a individual server. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: alertPolicies
          description: Describe each alert policy applied to the server
          type: complex
        - in: query
          name: changeInfo
          description: Describes created and modified details
          type: complex
        - in: query
          name: cpu
          description: How many vCPUs are allocated to the server
          type: integer
        - in: query
          name: createdBy
          description: Who created the server
          type: string
        - in: query
          name: createdDate
          description: Date/time that the server was created
          type: datetime
        - in: query
          name: customFields
          description: Details about any custom fields and their values
          type: complex
        - in: query
          name: description
          description: User-defined description of this server
          type: string
        - in: query
          name: details
          description: Resource allocations, alert policies, snapshots, and more.
          type: complex
        - in: query
          name: diskCount
          description: How many disks are attached to the server
          type: integer
        - in: query
          name: disks
          description: The disks attached to the server
          type: complex
        - in: query
          name: displayName
          description: Friendly display name for the server (can be the same as the
            name)
          type: string
        - in: query
          name: displayValue
          description: Shown value of the field
          type: string
        - in: query
          name: groupId
          description: ID of the parent group
          type: string
        - in: query
          name: hostName
          description: Fully qualified name of the server
          type: string
        - in: query
          name: id
          description: ID of the server being queried
          type: string
        - in: query
          name: inMaintenanceMode
          description: Indicator of whether server has been placed in maintenance mode
          type: boolean
        - in: query
          name: internal
          description: Private IP address. If associated with a public IP address, then
            the public value is populated
          type: string
        - in: query
          name: ipAddresses
          description: Details about IP addresses associated with the server
          type: complex
        - in: query
          name: isTemplate
          description: Boolean indicating whether this is a custom template or running
            server
          type: boolean
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this server
          type: array
        - in: query
          name: locationId
          description: Data center that this server resides in
          type: string
        - in: query
          name: memoryMB
          description: How many MB of memory are allocated to the server
          type: integer
        - in: query
          name: modifiedBy
          description: Who modified the server last
          type: string
        - in: query
          name: modifiedDate
          description: Date/time that the server was last updated
          type: datetime
        - in: query
          name: name
          description: Name of the server
          type: string
        - in: query
          name: osType
          description: Friendly name of the Operating System the server is running
          type: string
        - in: query
          name: partitionPaths
          description: List of partition paths on the disk
          type: array
        - in: query
          name: partitions
          description: The partitions defined for the server
          type: complex
        - in: query
          name: path
          description: File system location path of the partition
          type: string
        - in: query
          name: powerState
          description: Whether the server is running or not
          type: string
        - in: query
          name: processorDescription
          description: Processor configuration description (for bare metal servers only)
          type: string
        - in: query
          name: public
          description: If applicable, the public IP
          type: string
        - in: query
          name: ServerId
          description: ID of the server being queried. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        - in: query
          name: sizeGB
          description: Size of the disk in GB
          type: integer
        - in: query
          name: snapshots
          description: Details about any snapshot associated with the server
          type: complex
        - in: query
          name: status
          description: Describes whether the server is active or not
          type: string
        - in: query
          name: storageDescription
          description: Storage configuration description (for bare metal servers only)
          type: string
        - in: query
          name: storageGB
          description: How many total GB of storage are allocated to the server
          type: integer
        - in: query
          name: storageType
          description: Whether it uses standard or premium storage
          type: string
        - in: query
          name: type
          description: Whether a standard or premium server
          type: string
        - in: query
          name: value
          description: Underlying value of the field
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
      patch:
        summary: Set Server Description/Group
        description: Changes the description and parent group of an existing server.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: set-server-descriptiongroup
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: current
          description: The current administrator/root password used to login.
          type: string
        - in: query
          name: member
          description: The property of the server to perform the operation on. In this
            case, the value will be either description or groupId.
          type: string
        - in: query
          name: op
          description: The operation to perform on a given property of the server. In
            this case, the value must be set for setting the description and parent
            group.
          type: string
        - in: query
          name: password
          description: The new administrator/root password to change to.
          type: string
        - in: query
          name: patchOperation
          description: A list of properties, values, and the operations to perform with
            them for the server.
          type: array
        - in: query
          name: ServerId
          description: ID of the server to update. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        - in: query
          name: value
          description: The value to set for the given member. This is either the description
            of the server to set, or the unique identifier of the group to set as the
            parent.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/cpuAutoscalePolicy:
      delete:
        summary: Remove Vertical Autoscale Policy from Server
        description: Removes the autoscale policy from a given server, if the policy
          has first been applied to the server. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: remove-vertical-autoscale-policy-from-server
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
      get:
        summary: View Vertical Autoscale Policy on Server
        description: Gets the autoscale policy of a given server, if a policy has been
          applied on the server. Calls to this operation must include a token acquired
          from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: view-vertical-autoscale-policy-on-server
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: ID of the autoscale policy
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this policy
          type: array
        - in: query
          name: serverId
          description: ID of the server. Retrieved from query to containing group, or
            by looking at the URL when viewing a server in the Control Portal.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
      put:
        summary: Set Vertical Autoscale Policy on Server
        description: Sets the autoscale policy for a specified server. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: set-vertical-autoscale-policy-on-server
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: id
          description: The unique identifier of the autoscale policy to apply to the
            server. Can be retrieved by calling [Get Vertical Autoscale Policies](../Autoscale
            Policies/get-vertical-autoscale-policies.md).
          type: string
        - in: query
          name: serverId
          description: ID of the server. Retrieved from query to containing group, or
            by looking at the URL when viewing a server in the Control Portal.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/credentials:
      get:
        summary: Get Server Credentials
        description: Retrieves the administrator/root password on an existing server.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-server-credentials
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: password
          description: The administrator/root password used to login.
          type: string
        - in: query
          name: ServerId
          description: ID of the server with the credentials to return. Retrieved from
            query to containing group, or by looking at the URL when viewing a server
            in the Control Portal.
          type: string
        - in: query
          name: userName
          description: The username of root/administrator on the server. Typically root
            for Linux machines and Administrator for Windows.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/networks:
      post:
        summary: Add Secondary Network
        description: Adds a secondary network adapter to a given server in a given account.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: add-secondary-network
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: ipAddress
          description: Optional IP address for the networkId
          type: string
        - in: query
          name: networkId
          description: ID of the network. These can be retrieved from the [Get Network
            List](../Networks/get-network-list.md) API operation
          type: string
        - in: query
          name: serverId
          description: ID of the server
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/networks/{networkId}:
      delete:
        summary: Remove Secondary Network
        description: Removes a secondary network adapter from a given server in a given
          account. Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: remove-secondary-network
        parameters:
        - in: query
          name: accountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: networkId
          description: ID of the network. These can be retrieved from the [Get Network
            List](../Networks/get-network-list.md) API operation
          type: string
        - in: query
          name: operationId
          description: GUID for the item in the queue for completion
          type: string
        - in: query
          name: serverId
          description: ID of the server
          type: string
        - in: query
          name: uri
          description: Link to review status of the operation
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/publicIPAddresses:
      post:
        summary: Add Public IP Address
        description: Claims a public IP address and associates it with a server, allowing
          access to it on a given set of protocols and ports. It may also be set to
          restrict access based on a source IP range. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: add-public-ip-address
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cidr
          description: The IP range allowed to access the public IP, specified using
            [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).
          type: string
        - in: query
          name: internalIPAddress
          description: The internal (private) IP address to map to the new public IP
            address. If not provided, one will be assigned for you.
          type: string
        - in: query
          name: port
          description: The port to open for the given protocol. If defining a range
            of ports, this represents the first port in the range.
          type: integer
        - in: query
          name: ports
          description: The set of ports and protocols to allow access to for the new
            public IP address. Only these specified ports on the respective protocols
            will be accessible when accessing the server using the public IP address
            claimed here.
          type: array
        - in: query
          name: portTo
          description: If defining a range of ports, optionally provide the last number
            of the range.
          type: integer
        - in: query
          name: protocol
          description: 'The specific protocol to support for the given port(s). Should
            be one of the following: tcp, udp, or icmp.'
          type: string
        - in: query
          name: ServerId
          description: ID of the server being queried. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        - in: query
          name: sourceRestrictions
          description: The source IP address range allowed to access the new public
            IP address. Used to restrict access to only the specified range of source
            IPs.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/publicIPAddresses/{publicIP}:
      delete:
        summary: Remove Public IP Address
        description: Releases the given public IP address of a server so that it is
          no longer associated with the server and available to be claimed again by
          another server. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: remove-public-ip-address
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: href
          description: /v2/operations/[ALIAS]/status/[ID]
          type: string
        - in: query
          name: id
          description: '[ID]'
          type: string
        - in: query
          name: PublicIP
          description: The specific public IP to return details about. A server may
            have more than one public IP, and the list of available ones can be retrieved
            from the call to [Get Server](../Servers/get-server.md).
          type: string
        - in: query
          name: rel
          description: status
          type: string
        - in: query
          name: ServerId
          description: ID of the server being queried. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
      get:
        summary: Get Public IP Address
        description: Gets the details for the public IP address of a server, including
          the specific set of protocols and ports allowed and any source IP restrictions.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-public-ip-address
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cidr
          description: The IP range allowed to access the public IP, specified using
            [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).
          type: string
        - in: query
          name: internalIPAddress
          description: The internal (private) IP address mapped to the public IP address.
          type: string
        - in: query
          name: port
          description: The port to open for the given protocol. If defining a range
            of ports, this represents the first port in the range.
          type: integer
        - in: query
          name: ports
          description: The set of accessible ports and protocols for the public IP address.
          type: array
        - in: query
          name: portTo
          description: If defining a range of ports, optionally provide the last number
            of the range.
          type: integer
        - in: query
          name: protocol
          description: The specific protocol to support for the given port(s). Should
            be either tcp, udp, or icmp (which is enabled by default).
          type: string
        - in: query
          name: PublicIP
          description: The specific public IP to return details about. A server may
            have more than one public IP, and the list of available ones can be retrieved
            from the call to [Get Server](../Servers/get-server.md).
          type: string
        - in: query
          name: ServerId
          description: ID of the server being queried. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        - in: query
          name: sourceRestrictions
          description: The source IP address range allowed to access the new public
            IP address. Only traffic from this range will have access to the public
            IP on the specified ports.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
      put:
        summary: Update Public IP Address
        description: Updates a public IP address on an existing server, allowing access
          to it on a given set of protocols and ports as well as restricting access
          based on a source IP range. Calls to this operation must include a token acquired
          from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: update-public-ip-address
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cidr
          description: The IP range allowed to access the public IP, specified using
            [CIDR notation](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing).
          type: string
        - in: query
          name: port
          description: The port to open for the given protocol. If defining a range
            of ports, this represents the first port in the range.
          type: integer
        - in: query
          name: ports
          description: The set of ports and protocols to allow access to for the public
            IP address. Only these specified ports on the respective protocols will
            be accessible when accessing the server using the public IP address specified
            here.
          type: array
        - in: query
          name: portTo
          description: If defining a range of ports, optionally provide the last number
            of the range.
          type: integer
        - in: query
          name: protocol
          description: 'The specific protocol to support for the given port(s). Should
            be one of the following: tcp, udp, or icmp.'
          type: string
        - in: query
          name: PublicIP
          description: The specific public IP to return details about. A server may
            have more than one public IP, and the list of available ones can be retrieved
            from the call to [Get Server](../Servers/get-server.md).
          type: string
        - in: query
          name: ServerId
          description: ID of the server being queried. Retrieved from query to containing
            group, or by looking at the URL when viewing a server in the Control Portal.
          type: string
        - in: query
          name: sourceRestrictions
          description: The source IP address range allowed to access the public IP address.
            Used to restrict access to only the specified range of source IPs.
          type: array
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/restore:
      post:
        summary: Restore Server
        description: Restores a given archived server to a specified group. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: restore-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: ServerId
          description: ID of the archived server to restore. Retrieved from query to
            containing group, or by looking at the URL when viewing a server in the
            Control Portal.
          type: string
        - in: query
          name: targetGroupId
          description: The unique identifier of the target group to restore the server
            to.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/snapshots/{snapshotId}:
      delete:
        summary: Delete Snapshot
        description: Deletes a given server snapshot. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: delete-snapshot
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: href
          description: /v2/operations/[ALIAS]/status/[ID]
          type: string
        - in: query
          name: id
          description: '[ID]'
          type: string
        - in: query
          name: rel
          description: status
          type: string
        - in: query
          name: ServerId
          description: ID of the server with the snapshot to delete. Retrieved from
            query to containing group, or by looking at the URL when viewing a server
            in the Control Portal.
          type: string
        - in: query
          name: SnapshotId
          description: ID of the snapshot to delete. Retrieved from the `links ` in
            the `snapshots` section of the [Get Server](../Servers/get-server.md) response.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /servers/{accountAlias}/{serverId}/snapshots/{snapshotId}/restore:
      post:
        summary: Revert to Snapshot
        description: Reverts a server to a snapshot. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: revert-to-snapshot
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: href
          description: /v2/operations/[ALIAS]/status/[ID]
          type: string
        - in: query
          name: id
          description: '[ID]'
          type: string
        - in: query
          name: rel
          description: status
          type: string
        - in: query
          name: ServerId
          description: ID of the server with the snapshot to restore. Retrieved from
            query to containing group, or by looking at the URL when viewing a server
            in the Control Portal.
          type: string
        - in: query
          name: SnapshotId
          description: ID of the snapshot to restore. Retrieved from the `links ` in
            the `snapshots` section of the [Get Server](../Servers/get-server.md) response.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Servers
        security: []
    /sharedLoadBalancers/{accountAlias}/{dataCenter}:
      get:
        summary: Get Shared Load Balancers
        description: Gets the list of shared load balancers that exist for a given account
          and data center. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-shared-load-balancers
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: description
          description: Description for the load balancer
          type: string
        - in: query
          name: id
          description: ID of the load balancer
          type: string
        - in: query
          name: ipAddress
          description: The external (public) IP address of the load balancer
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this load balancer
          type: array
        - in: query
          name: method
          description: The balancing method for this load balancer, either `leastConnection`
            or `roundRobin`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: name
          description: Friendly name of the load balancer
          type: string
        - in: query
          name: nodes
          description: Collection of nodes configured behind this shared load balancer
          type: array
        - in: query
          name: persistence
          description: The persistence method for this load balancer, either `standard`
            or `sticky`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: pools
          description: Collection of pools configured for this shared load balancer
          type: array
        - in: query
          name: port
          description: Port configured on the public-facing side of the load balancer
            pool.
          type: integer
        - in: query
          name: privatePort
          description: The internal (private) port of the node server
          type: integer
        - in: query
          name: status
          description: 'Status of the load balancer: `enabled`, `disabled` or `deleted`'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      post:
        summary: Create Shared Load Balancer
        description: Creates a new shared load balancer configuration for a given account
          and data center. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: create-shared-load-balancer
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: description
          description: Description for new the load balancer
          type: string
        - in: query
          name: name
          description: Friendly name for new the load balancer
          type: string
        - in: query
          name: status
          description: 'Status to create the load balancer with: `enabled` or `disabled`'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
    /sharedLoadBalancers/{accountAlias}/{dataCenter}/{loadBalancerId}:
      delete:
        summary: Delete Shared Load Balancer
        description: Deletes a given shared load balancer by ID. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: delete-shared-load-balancer
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      get:
        summary: Get Shared Load Balancer
        description: Gets the specified shared load balancer for a given account and
          data center. Calls to this operation must include a token acquired from the
          authentication endpoint. See the [Login API](../Authentication/login.md) for
          information on acquiring this token.
        operationId: get-shared-load-balancer
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: description
          description: Description for the load balancer
          type: string
        - in: query
          name: id
          description: ID of the load balancer
          type: string
        - in: query
          name: ipAddress
          description: The external (public) IP address of the load balancer
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this load balancer
          type: array
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: method
          description: The balancing method for this load balancer, either `leastConnection`
            or `roundRobin`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: name
          description: Friendly name of the load balancer
          type: string
        - in: query
          name: nodes
          description: Collection of nodes configured behind this shared load balancer
          type: array
        - in: query
          name: persistence
          description: The persistence method for this load balancer, either `standard`
            or `sticky`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: pools
          description: Collection of pools configured for this shared load balancer
          type: array
        - in: query
          name: port
          description: Port configured on the public-facing side of the load balancer
            pool.
          type: integer
        - in: query
          name: privatePort
          description: The internal (private) port of the node server
          type: integer
        - in: query
          name: status
          description: 'Status of the load balancer: `enabled`, `disabled` or `deleted`'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      put:
        summary: Update Shared Load Balancer
        description: Updates a given shared load balancer. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: update-shared-load-balancer
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: description
          description: Description for new the load balancer
          type: string
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer to update
          type: string
        - in: query
          name: name
          description: Friendly name for new the load balancer
          type: string
        - in: query
          name: status
          description: 'Status to create the load balancer with: `enabled` or `disabled`'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
    /sharedLoadBalancers/{accountAlias}/{dataCenter}/{loadBalancerId}/pools:
      get:
        summary: Get Load Balancer Pools
        description: Gets the list of pools configured for a given shared load balancer.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-load-balancer-pools
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: id
          description: ID of the load balancer pool
          type: string
        - in: query
          name: ipAddress
          description: The internal (private) IP address of the node server
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this load balancer pool
          type: array
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: method
          description: The balancing method for this load balancer, either `leastConnection`
            or `roundRobin`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: name
          description: Name of the node (generally the IP address)
          type: string
        - in: query
          name: nodes
          description: Collection of nodes configured behind this shared load balancer
          type: array
        - in: query
          name: persistence
          description: The persistence method for this load balancer, either `standard`
            or `sticky`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: port
          description: Port configured on the public-facing side of the load balancer
            pool.
          type: integer
        - in: query
          name: privatePort
          description: The internal (private) port of the node server
          type: integer
        - in: query
          name: status
          description: 'Status of the node: `enabled`, `disabled` or `deleted`.'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      post:
        summary: Create Load Balancer Pool
        description: Creates a new shared load balancer configuration for a given account
          and data center. Calls to this operation must include a token acquired from
          the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: create-load-balancer-pool
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: method
          description: The balancing method for this load balancer, either `leastConnection`
            or `roundRobin`. Default is `roundRobin`. See [Shared Load Balancer Overview](../Shared
            Load Balancers/shared-load-balancer-overview.md) for more information about
            these options.
          type: string
        - in: query
          name: persistence
          description: The persistence method for this load balancer, either `standard`
            or `sticky`. Default is `standard`. See [Shared Load Balancer Overview](../Shared
            Load Balancers/shared-load-balancer-overview.md) for more information about
            these options.
          type: string
        - in: query
          name: port
          description: Port to configure on the public-facing side of the load balancer
            pool. Must be either `80` (HTTP) or `443` (HTTPS).
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
    /sharedLoadBalancers/{accountAlias}/{dataCenter}/{loadBalancerId}/pools/{poolId}:
      delete:
        summary: Delete Load Balancer Pool
        description: Deletes a given pool of a shared load balancer by ID. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: delete-load-balancer-pool
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      get:
        summary: Get Load Balancer Pool
        description: Gets a specified pool configured for the given shared load balancer.
          Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-load-balancer-pool
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: id
          description: ID of the load balancer pool
          type: string
        - in: query
          name: ipAddress
          description: The internal (private) IP address of the node server
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this load balancer pool
          type: array
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: method
          description: The balancing method for this load balancer, either `leastConnection`
            or `roundRobin`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: name
          description: Name of the node (generally the IP address)
          type: string
        - in: query
          name: nodes
          description: Collection of nodes configured behind this shared load balancer
          type: array
        - in: query
          name: persistence
          description: The persistence method for this load balancer, either `standard`
            or `sticky`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: PoolId
          description: ID of the pool
          type: string
        - in: query
          name: port
          description: Port configured on the public-facing side of the load balancer
            pool.
          type: integer
        - in: query
          name: privatePort
          description: The internal (private) port of the node server
          type: integer
        - in: query
          name: status
          description: 'Status of the node: `enabled`, `disabled` or `deleted`.'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      put:
        summary: Update Load Balancer Pool
        description: Updates a given shared load balancer pool. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: update-load-balancer-pool
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: method
          description: The balancing method for this load balancer, either `leastConnection`
            or `roundRobin`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: persistence
          description: The persistence method for this load balancer, either `standard`
            or `sticky`. See [Shared Load Balancer Overview](../Shared Load Balancers/shared-load-balancer-overview.md)
            for more information about these options.
          type: string
        - in: query
          name: PoolId
          description: ID of the pool to update
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
    /sharedLoadBalancers/{accountAlias}/{dataCenter}/{loadBalancerId}/pools/{poolId}/nodes:
      get:
        summary: Get Load Balancer Nodes
        description: Gets the list of nodes configured behind a given shared load balancer
          pool. Calls to this operation must include a token acquired from the authentication
          endpoint. See the [Login API](../Authentication/login.md) for information
          on acquiring this token.
        operationId: get-load-balancer-nodes
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: ipAddress
          description: The internal (private) IP address of the node server
          type: string
        - in: query
          name: links
          description: Collection of [entity links](../Getting Started/api-v20-links-framework.md)
            that point to resources related to this node
          type: array
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: PoolId
          description: ID of the pool containing the nodes
          type: string
        - in: query
          name: privatePort
          description: The internal (private) port of the node server
          type: integer
        - in: query
          name: status
          description: 'Status of the node: `enabled`, `disabled` or `deleted`.'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
      put:
        summary: Update Load Balancer Nodes
        description: Updates the nodes behind a given shared load balancer pool. Calls
          to this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: update-load-balancer-nodes
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: DataCenter
          description: Short string representing the data center where the load balancer
            is. Valid codes can be retrieved from the [Get Data Center List](../Data
            Centers/get-data-center.md) API operation.
          type: string
        - in: query
          name: ipAddress
          description: The internal (private) IP address of the node server
          type: string
        - in: query
          name: LoadBalancerId
          description: ID of the load balancer
          type: string
        - in: query
          name: PoolId
          description: ID of the pool to update
          type: string
        - in: query
          name: privatePort
          description: The internal (private) port of the node server. Must be a value
            between 1 and 65535.
          type: integer
        - in: query
          name: status
          description: 'Status of the node: `enabled`, `disabled` or `deleted`.'
          type: string
        responses:
          200:
            description: OK
        tags:
        - Load Balancers
        security: []
    /v1/{accountAlias}/billing?subscriptionId={subscriptionId}:
      get:
        summary: Get Billing
        description: Returns current RDBS billing for an entire account or individual
          subscription. Calls to this operation must include a token acquired from the
          authentication endpoint. See the [Login API](../Authentication/login.md) for
          information on acquiring this token.
        operationId: get-billing
        responses:
          200:
            description: OK
        tags:
        - Billing
        security: []
    /v1/{accountAlias}/history?subscriptionId={subscriptionId}:
      get:
        summary: Get History
        description: Returns an ordered history of actions performed on all account
          subscriptions, or a single subscription. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: get-history
        responses:
          200:
            description: OK
        tags:
        - Billing
        security: []
    /v1/{accountAlias}/promotions:
      get:
        summary: Get Promotions
        description: Returns all promotions applied to this account. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-promotions
        responses:
          200:
            description: OK
        tags:
        - Promotions
        security: []
    /v1/{accountAlias}/subscriptions:
      post:
        summary: Create Subscription
        description: Create a new subscription. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: create-subscription
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}:
      delete:
        summary: Delete Subscription
        description: Delete an existing subscription. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: delete-subscription
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
      get:
        summary: Get Subscription
        description: Returns details of a single subscription. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-subscription
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
      patch:
        summary: Patch Subscription
        description: Modify an existing subscription. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: patch-subscription
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/backups:
      get:
        summary: Get Subscription Backups
        description: Returns details of subscription backups. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-subscription-backups
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
      post:
        summary: Create Subscription Backup
        description: Create a subscription backup. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: create-subscription-backup
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/backups/{backupId}:
      delete:
        summary: Delete Subscription Backup
        description: Delete a subscription backup. Calls to this operation must include
          a token acquired from the authentication endpoint. See the [Login API](../Authentication/login.md)
          for information on acquiring this token.
        operationId: delete-subscription-backup
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/backups/{backupId}/operations:
      post:
        summary: Create Subscription Backup Operation
        description: Initiation a subscription backups operation. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: create-subscription-backup-operation
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/certificate:
      get:
        summary: Get Subscription Certificate
        description: Returns the subscription TLS certificate as a stream. Calls to
          this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-subscription-certificate
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/notifications:
      get:
        summary: Get Subscription Notifications
        description: Returns all subscription notifications. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: get-subscription-notifications
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
      post:
        summary: Create Subscription Notification
        description: Create a subscription notification. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: create-subscription-notification
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/notifications/{notificationId}:
      delete:
        summary: Delete Subscription Notification
        description: Delete a subscription notification. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: delete-subscription-notification
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
      put:
        summary: Update Subscription Notification
        description: Update a subscription notification. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: update-subscription-notification
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/notifications/{notificationId}/operations:
      post:
        summary: Create Subscription Notification Operation
        description: Initiate a subscription notifications operation. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: create-subscription-notification-operation
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions/{subscriptionId}/operations:
      post:
        summary: Create Subscription Operation
        description: Initiate a subscriptions operation. Calls to this operation must
          include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: create-subscription-operation
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /v1/{accountAlias}/subscriptions?dataCenter={dataCenterId}&status={status}:
      get:
        summary: Get Subscriptions
        description: Returns a list of all subscriptions and details. Calls to this
          operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-subscriptions
        responses:
          200:
            description: OK
        tags:
        - Subscriptions
        security: []
    /vmImport/{accountAlias}:
      post:
        summary: Import Server
        description: Imports a new server from an uploaded OVF. Calls to this operation
          must include a token acquired from the authentication endpoint. See the [Login
          API](../Authentication/login.md) for information on acquiring this token.
        operationId: import-server
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cpu
          description: Number of processors to configure the server with (1-16). If
            this value is different from the one specified in the OVF, the import process
            will resize the server according to the value specified here.
          type: integer
        - in: query
          name: customFields
          description: Collection of custom field ID-value pairs to set for the server.
          type: complex
        - in: query
          name: description
          description: User-defined description of this server
          type: string
        - in: query
          name: groupId
          description: ID of the parent group. Retrieved from query to parent group,
            or by looking at the URL on the UI pages in the Control Portal.
          type: string
        - in: query
          name: id
          description: ID of the custom field to set. Available custom field IDs can
            be retrieved from the [Get Custom Fields](../Custom Fields/get-custom-fields.md)
            API operation.
          type: string
        - in: query
          name: memoryGB
          description: Number of GB of memory to configure the server with (1-128).
            If this value is different from the one specified in the OVF, the import
            process will resize the server according to the value specified here.
          type: integer
        - in: query
          name: name
          description: Name of the server to create. Alphanumeric characters and dashes
            only. Must be between 1-7 characters depending on the length of the account
            alias. (This name will be appended with a two digit number and prepended
            with the datacenter code and account alias to make up the final server name.)
          type: string
        - in: query
          name: networkId
          description: ID of the network to which to deploy the server. If not provided,
            a network will be chosen automatically. If your account has not yet been
            assigned a network, leave this blank and one will be assigned automatically.
            The list of available networks for a given account in a data center can
            be retrieved from the [Get Data Center Deployment Capabilities](../Data
            Centers/get-data-center-deployment-capabilities.md) API operation.
          type: string
        - in: query
          name: ovfId
          description: The identifier of the OVF that defines the server to import.
            This can be retrieved from the [Get Available Server Imports](../Servers/get-available-server-imports.md)
            API operation.
          type: string
        - in: query
          name: ovfOsType
          description: The OS type of the server being imported. Currently, the only
            supported OS types are `redHat6_64Bit`, `windows2008R2DataCenter_64bit`,
            and `windows2012R2DataCenter_64Bit`. A list of importable OS types for a
            given data center can be retrieved from the [Get Data Center Deployment
            Capabilities](../Data Centers/get-data-center-deployment-capabilities.md)
            API operation.
          type: string
        - in: query
          name: password
          description: Password of administrator or root user on server. _This password
            must match the one set on the server being imported or the import will fail._
          type: string
        - in: query
          name: primaryDns
          description: Primary DNS to set on the server. If not supplied the default
            value set on the account will be used.
          type: string
        - in: query
          name: secondaryDns
          description: Secondary DNS to set on the server. If not supplied the default
            value set on the account will be used.
          type: string
        - in: query
          name: storageType
          description: For standard servers, whether to use standard or premium storage.
            If not provided, will default to premium storage. For hyperscale servers,
            storage type must be hyperscale.
          type: string
        - in: query
          name: type
          description: Whether to create standard or hyperscale server
          type: string
        - in: query
          name: value
          description: Value to set the custom field to for this server.
          type: string
        responses:
          200:
            description: OK
        tags:
        - Imports
        security: []
    /vmImport/{accountAlias}/{locationId}/available:
      get:
        summary: Get Available Server Imports
        description: Gets the list of available servers that can be imported. Calls
          to this operation must include a token acquired from the authentication endpoint.
          See the [Login API](../Authentication/login.md) for information on acquiring
          this token.
        operationId: get-available-server-imports
        parameters:
        - in: query
          name: AccountAlias
          description: Short code for a particular account
          type: string
        - in: query
          name: cpuCount
          description: Number of processors the server is configured with.
          type: integer
        - in: query
          name: id
          description: ID of the OVF.
          type: string
        - in: query
          name: LocationId
          description: Data center location identifier
          type: string
        - in: query
          name: memorySizeMB
          description: Number of MB of memory the server is configured with.
          type: integer
        - in: query
          name: name
          description: Name of the OVF.
          type: string
        - in: query
          name: storageSizeGB
          description: Number of GB of storage the server is configured with.
          type: integer
        responses:
          200:
            description: OK
        tags:
        - Imports
        security: []
  definitions: []